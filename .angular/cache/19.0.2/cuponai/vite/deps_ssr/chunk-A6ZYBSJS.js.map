{
  "version": 3,
  "sources": ["../../../../../../node_modules/base64-js/index.js", "../../../../../../node_modules/@langchain/core/dist/utils/js-sha1/hash.js", "../../../../../../node_modules/@langchain/core/dist/caches/base.js", "../../../../../../node_modules/js-tiktoken/dist/chunk-YVJR5WRT.js", "../../../../../../node_modules/@langchain/core/dist/utils/tiktoken.js", "../../../../../../node_modules/@langchain/core/dist/language_models/base.js", "../../../../../../node_modules/@langchain/core/dist/runnables/passthrough.js"],
  "sourcesContent": ["'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\nfunction getLens(b64) {\n  var len = b64.length;\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0;\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n  return arr;\n}\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('');\n}\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n  return parts.join('');\n}", "// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\n\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n  if (sharedMemory) {\n    blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    this.blocks = blocks;\n  } else {\n    this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  }\n  this.h0 = 0x67452301;\n  this.h1 = 0xefcdab89;\n  this.h2 = 0x98badcfe;\n  this.h3 = 0x10325476;\n  this.h4 = 0xc3d2e1f0;\n  this.block = this.start = this.bytes = this.hBytes = 0;\n  this.finalized = this.hashed = false;\n  this.first = true;\n}\nSha1.prototype.update = function (message) {\n  if (this.finalized) {\n    return;\n  }\n  var notString = typeof message !== \"string\";\n  if (notString && message.constructor === root.ArrayBuffer) {\n    message = new Uint8Array(message);\n  }\n  var code,\n    index = 0,\n    i,\n    length = message.length || 0,\n    blocks = this.blocks;\n  while (index < length) {\n    if (this.hashed) {\n      this.hashed = false;\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    if (notString) {\n      for (i = this.start; index < length && i < 64; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = this.start; index < length && i < 64; ++index) {\n        code = message.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        }\n      }\n    }\n    this.lastByteIndex = i;\n    this.bytes += i - this.start;\n    if (i >= 64) {\n      this.block = blocks[16];\n      this.start = i - 64;\n      this.hash();\n      this.hashed = true;\n    } else {\n      this.start = i;\n    }\n  }\n  if (this.bytes > 4294967295) {\n    this.hBytes += this.bytes / 4294967296 << 0;\n    this.bytes = this.bytes % 4294967296;\n  }\n  return this;\n};\nSha1.prototype.finalize = function () {\n  if (this.finalized) {\n    return;\n  }\n  this.finalized = true;\n  var blocks = this.blocks,\n    i = this.lastByteIndex;\n  blocks[16] = this.block;\n  blocks[i >> 2] |= EXTRA[i & 3];\n  this.block = blocks[16];\n  if (i >= 56) {\n    if (!this.hashed) {\n      this.hash();\n    }\n    blocks[0] = this.block;\n    blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n  }\n  blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n  blocks[15] = this.bytes << 3;\n  this.hash();\n};\nSha1.prototype.hash = function () {\n  var a = this.h0,\n    b = this.h1,\n    c = this.h2,\n    d = this.h3,\n    e = this.h4;\n  var f,\n    j,\n    t,\n    blocks = this.blocks;\n  for (j = 16; j < 80; ++j) {\n    t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n    blocks[j] = t << 1 | t >>> 31;\n  }\n  for (j = 0; j < 20; j += 5) {\n    f = b & c | ~b & d;\n    t = a << 5 | a >>> 27;\n    e = t + f + e + 1518500249 + blocks[j] << 0;\n    b = b << 30 | b >>> 2;\n    f = a & b | ~a & c;\n    t = e << 5 | e >>> 27;\n    d = t + f + d + 1518500249 + blocks[j + 1] << 0;\n    a = a << 30 | a >>> 2;\n    f = e & a | ~e & b;\n    t = d << 5 | d >>> 27;\n    c = t + f + c + 1518500249 + blocks[j + 2] << 0;\n    e = e << 30 | e >>> 2;\n    f = d & e | ~d & a;\n    t = c << 5 | c >>> 27;\n    b = t + f + b + 1518500249 + blocks[j + 3] << 0;\n    d = d << 30 | d >>> 2;\n    f = c & d | ~c & e;\n    t = b << 5 | b >>> 27;\n    a = t + f + a + 1518500249 + blocks[j + 4] << 0;\n    c = c << 30 | c >>> 2;\n  }\n  for (; j < 40; j += 5) {\n    f = b ^ c ^ d;\n    t = a << 5 | a >>> 27;\n    e = t + f + e + 1859775393 + blocks[j] << 0;\n    b = b << 30 | b >>> 2;\n    f = a ^ b ^ c;\n    t = e << 5 | e >>> 27;\n    d = t + f + d + 1859775393 + blocks[j + 1] << 0;\n    a = a << 30 | a >>> 2;\n    f = e ^ a ^ b;\n    t = d << 5 | d >>> 27;\n    c = t + f + c + 1859775393 + blocks[j + 2] << 0;\n    e = e << 30 | e >>> 2;\n    f = d ^ e ^ a;\n    t = c << 5 | c >>> 27;\n    b = t + f + b + 1859775393 + blocks[j + 3] << 0;\n    d = d << 30 | d >>> 2;\n    f = c ^ d ^ e;\n    t = b << 5 | b >>> 27;\n    a = t + f + a + 1859775393 + blocks[j + 4] << 0;\n    c = c << 30 | c >>> 2;\n  }\n  for (; j < 60; j += 5) {\n    f = b & c | b & d | c & d;\n    t = a << 5 | a >>> 27;\n    e = t + f + e - 1894007588 + blocks[j] << 0;\n    b = b << 30 | b >>> 2;\n    f = a & b | a & c | b & c;\n    t = e << 5 | e >>> 27;\n    d = t + f + d - 1894007588 + blocks[j + 1] << 0;\n    a = a << 30 | a >>> 2;\n    f = e & a | e & b | a & b;\n    t = d << 5 | d >>> 27;\n    c = t + f + c - 1894007588 + blocks[j + 2] << 0;\n    e = e << 30 | e >>> 2;\n    f = d & e | d & a | e & a;\n    t = c << 5 | c >>> 27;\n    b = t + f + b - 1894007588 + blocks[j + 3] << 0;\n    d = d << 30 | d >>> 2;\n    f = c & d | c & e | d & e;\n    t = b << 5 | b >>> 27;\n    a = t + f + a - 1894007588 + blocks[j + 4] << 0;\n    c = c << 30 | c >>> 2;\n  }\n  for (; j < 80; j += 5) {\n    f = b ^ c ^ d;\n    t = a << 5 | a >>> 27;\n    e = t + f + e - 899497514 + blocks[j] << 0;\n    b = b << 30 | b >>> 2;\n    f = a ^ b ^ c;\n    t = e << 5 | e >>> 27;\n    d = t + f + d - 899497514 + blocks[j + 1] << 0;\n    a = a << 30 | a >>> 2;\n    f = e ^ a ^ b;\n    t = d << 5 | d >>> 27;\n    c = t + f + c - 899497514 + blocks[j + 2] << 0;\n    e = e << 30 | e >>> 2;\n    f = d ^ e ^ a;\n    t = c << 5 | c >>> 27;\n    b = t + f + b - 899497514 + blocks[j + 3] << 0;\n    d = d << 30 | d >>> 2;\n    f = c ^ d ^ e;\n    t = b << 5 | b >>> 27;\n    a = t + f + a - 899497514 + blocks[j + 4] << 0;\n    c = c << 30 | c >>> 2;\n  }\n  this.h0 = this.h0 + a << 0;\n  this.h1 = this.h1 + b << 0;\n  this.h2 = this.h2 + c << 0;\n  this.h3 = this.h3 + d << 0;\n  this.h4 = this.h4 + e << 0;\n};\nSha1.prototype.hex = function () {\n  this.finalize();\n  var h0 = this.h0,\n    h1 = this.h1,\n    h2 = this.h2,\n    h3 = this.h3,\n    h4 = this.h4;\n  return HEX_CHARS[h0 >> 28 & 0x0f] + HEX_CHARS[h0 >> 24 & 0x0f] + HEX_CHARS[h0 >> 20 & 0x0f] + HEX_CHARS[h0 >> 16 & 0x0f] + HEX_CHARS[h0 >> 12 & 0x0f] + HEX_CHARS[h0 >> 8 & 0x0f] + HEX_CHARS[h0 >> 4 & 0x0f] + HEX_CHARS[h0 & 0x0f] + HEX_CHARS[h1 >> 28 & 0x0f] + HEX_CHARS[h1 >> 24 & 0x0f] + HEX_CHARS[h1 >> 20 & 0x0f] + HEX_CHARS[h1 >> 16 & 0x0f] + HEX_CHARS[h1 >> 12 & 0x0f] + HEX_CHARS[h1 >> 8 & 0x0f] + HEX_CHARS[h1 >> 4 & 0x0f] + HEX_CHARS[h1 & 0x0f] + HEX_CHARS[h2 >> 28 & 0x0f] + HEX_CHARS[h2 >> 24 & 0x0f] + HEX_CHARS[h2 >> 20 & 0x0f] + HEX_CHARS[h2 >> 16 & 0x0f] + HEX_CHARS[h2 >> 12 & 0x0f] + HEX_CHARS[h2 >> 8 & 0x0f] + HEX_CHARS[h2 >> 4 & 0x0f] + HEX_CHARS[h2 & 0x0f] + HEX_CHARS[h3 >> 28 & 0x0f] + HEX_CHARS[h3 >> 24 & 0x0f] + HEX_CHARS[h3 >> 20 & 0x0f] + HEX_CHARS[h3 >> 16 & 0x0f] + HEX_CHARS[h3 >> 12 & 0x0f] + HEX_CHARS[h3 >> 8 & 0x0f] + HEX_CHARS[h3 >> 4 & 0x0f] + HEX_CHARS[h3 & 0x0f] + HEX_CHARS[h4 >> 28 & 0x0f] + HEX_CHARS[h4 >> 24 & 0x0f] + HEX_CHARS[h4 >> 20 & 0x0f] + HEX_CHARS[h4 >> 16 & 0x0f] + HEX_CHARS[h4 >> 12 & 0x0f] + HEX_CHARS[h4 >> 8 & 0x0f] + HEX_CHARS[h4 >> 4 & 0x0f] + HEX_CHARS[h4 & 0x0f];\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n  this.finalize();\n  var h0 = this.h0,\n    h1 = this.h1,\n    h2 = this.h2,\n    h3 = this.h3,\n    h4 = this.h4;\n  return [h0 >> 24 & 0xff, h0 >> 16 & 0xff, h0 >> 8 & 0xff, h0 & 0xff, h1 >> 24 & 0xff, h1 >> 16 & 0xff, h1 >> 8 & 0xff, h1 & 0xff, h2 >> 24 & 0xff, h2 >> 16 & 0xff, h2 >> 8 & 0xff, h2 & 0xff, h3 >> 24 & 0xff, h3 >> 16 & 0xff, h3 >> 8 & 0xff, h3 & 0xff, h4 >> 24 & 0xff, h4 >> 16 & 0xff, h4 >> 8 & 0xff, h4 & 0xff];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n  this.finalize();\n  var buffer = new ArrayBuffer(20);\n  var dataView = new DataView(buffer);\n  dataView.setUint32(0, this.h0);\n  dataView.setUint32(4, this.h1);\n  dataView.setUint32(8, this.h2);\n  dataView.setUint32(12, this.h3);\n  dataView.setUint32(16, this.h4);\n  return buffer;\n};\nexport const insecureHash = message => {\n  return new Sha1(true).update(message)[\"hex\"]();\n};", "import { insecureHash } from \"../utils/hash.js\";\nimport { mapStoredMessageToChatMessage } from \"../messages/utils.js\";\n/**\n * This cache key should be consistent across all versions of LangChain.\n * It is currently NOT consistent across versions of LangChain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * separate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of LangChain.\n */\nexport const getCacheKey = (...strings) => insecureHash(strings.join(\"_\"));\nexport function deserializeStoredGeneration(storedGeneration) {\n  if (storedGeneration.message !== undefined) {\n    return {\n      text: storedGeneration.text,\n      message: mapStoredMessageToChatMessage(storedGeneration.message)\n    };\n  } else {\n    return {\n      text: storedGeneration.text\n    };\n  }\n}\nexport function serializeGeneration(generation) {\n  const serializedValue = {\n    text: generation.text\n  };\n  if (generation.message !== undefined) {\n    serializedValue.message = generation.message.toDict();\n  }\n  return serializedValue;\n}\n/**\n * Base class for all caches. All caches should extend this class.\n */\nexport class BaseCache {}\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n  constructor(map) {\n    super();\n    Object.defineProperty(this, \"cache\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.cache = map ?? new Map();\n  }\n  /**\n   * Retrieves data from the cache using a prompt and an LLM key. If the\n   * data is not found, it returns null.\n   * @param prompt The prompt used to find the data.\n   * @param llmKey The LLM key used to find the data.\n   * @returns The data corresponding to the prompt and LLM key, or null if not found.\n   */\n  lookup(prompt, llmKey) {\n    return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n  }\n  /**\n   * Updates the cache with new data using a prompt and an LLM key.\n   * @param prompt The prompt used to store the data.\n   * @param llmKey The LLM key used to store the data.\n   * @param value The data to be stored.\n   */\n  async update(prompt, llmKey, value) {\n    this.cache.set(getCacheKey(prompt, llmKey), value);\n  }\n  /**\n   * Returns a global instance of InMemoryCache using a predefined global\n   * map as the initial cache.\n   * @returns A global instance of InMemoryCache.\n   */\n  static global() {\n    return new InMemoryCache(GLOBAL_MAP);\n  }\n}", "import base64 from 'base64-js';\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from({\n    length: piece.length\n  }, (_, i) => ({\n    start: i,\n    end: i + 1\n  }));\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null) continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = {\n        start: parts[i].start,\n        end: parts[i + 1].end\n      };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1) return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map(p => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter(x => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = {\n      ...ranks.special_tokens,\n      ...extendedSpecialTokens\n    };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(Object.keys(this.specialTokens));\n    const ret = [];\n    const allowedSpecialSet = new Set(allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial);\n    const disallowedSpecialSet = new Set(disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(x => !allowedSpecialSet.has(x)) : disallowedSpecial);\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([...disallowedSpecialSet]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(`The text contains a special token that is not allowed: ${specialMatch[0]}`);\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0])) break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null) break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", tokens => {\n  return new RegExp(tokens.map(i => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\":\n      {\n        return \"gpt2\";\n      }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\":\n      {\n        return \"p50k_base\";\n      }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\":\n      {\n        return \"p50k_edit\";\n      }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\":\n      {\n        return \"r50k_base\";\n      }\n    case \"gpt-3.5-turbo-instruct-0914\":\n    case \"gpt-3.5-turbo-instruct\":\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"gpt-3.5-turbo-0125\":\n    case \"gpt-4-turbo\":\n    case \"gpt-4-turbo-2024-04-09\":\n    case \"gpt-4-turbo-preview\":\n    case \"gpt-4-0125-preview\":\n    case \"text-embedding-ada-002\":\n    case \"text-embedding-3-small\":\n    case \"text-embedding-3-large\":\n      {\n        return \"cl100k_base\";\n      }\n    case \"gpt-4o\":\n    case \"gpt-4o-2024-05-13\":\n    case \"gpt-4o-2024-08-06\":\n    case \"gpt-4o-mini-2024-07-18\":\n    case \"gpt-4o-mini\":\n    case \"o1-mini\":\n    case \"o1-preview\":\n    case \"o1-preview-2024-09-12\":\n    case \"o1-mini-2024-09-12\":\n    case \"chatgpt-4o-latest\":\n    case \"gpt-4o-realtime\":\n    case \"gpt-4o-realtime-preview-2024-10-01\":\n      {\n        return \"o200k_base\";\n      }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\nexport { Tiktoken, getEncodingNameForModel, never };", "import { Tiktoken, getEncodingNameForModel } from \"js-tiktoken/lite\";\nimport { AsyncCaller } from \"./async_caller.js\";\nconst cache = {};\nconst caller = /* #__PURE__ */new AsyncCaller({});\nexport async function getEncoding(encoding) {\n  if (!(encoding in cache)) {\n    cache[encoding] = caller.fetch(`https://tiktoken.pages.dev/js/${encoding}.json`).then(res => res.json()).then(data => new Tiktoken(data)).catch(e => {\n      delete cache[encoding];\n      throw e;\n    });\n  }\n  return await cache[encoding];\n}\nexport async function encodingForModel(model) {\n  return getEncoding(getEncodingNameForModel(model));\n}", "import { InMemoryCache } from \"../caches/base.js\";\nimport { StringPromptValue, ChatPromptValue } from \"../prompt_values.js\";\nimport { coerceMessageLikeToMessage } from \"../messages/utils.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { encodingForModel } from \"../utils/tiktoken.js\";\nimport { Runnable } from \"../runnables/base.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = modelName => {\n  if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n    return \"gpt-3.5-turbo-16k\";\n  }\n  if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n    return \"gpt-3.5-turbo\";\n  }\n  if (modelName.startsWith(\"gpt-4-32k\")) {\n    return \"gpt-4-32k\";\n  }\n  if (modelName.startsWith(\"gpt-4-\")) {\n    return \"gpt-4\";\n  }\n  if (modelName.startsWith(\"gpt-4o\")) {\n    return \"gpt-4o\";\n  }\n  return modelName;\n};\nexport const getEmbeddingContextSize = modelName => {\n  switch (modelName) {\n    case \"text-embedding-ada-002\":\n      return 8191;\n    default:\n      return 2046;\n  }\n};\nexport const getModelContextSize = modelName => {\n  switch (getModelNameForTiktoken(modelName)) {\n    case \"gpt-3.5-turbo-16k\":\n      return 16384;\n    case \"gpt-3.5-turbo\":\n      return 4096;\n    case \"gpt-4-32k\":\n      return 32768;\n    case \"gpt-4\":\n      return 8192;\n    case \"text-davinci-003\":\n      return 4097;\n    case \"text-curie-001\":\n      return 2048;\n    case \"text-babbage-001\":\n      return 2048;\n    case \"text-ada-001\":\n      return 2048;\n    case \"code-davinci-002\":\n      return 8000;\n    case \"code-cushman-001\":\n      return 2048;\n    default:\n      return 4097;\n  }\n};\n/**\n * Whether or not the input matches the OpenAI tool definition.\n * @param {unknown} tool The input to check.\n * @returns {boolean} Whether the input is an OpenAI tool definition.\n */\nexport function isOpenAITool(tool) {\n  if (typeof tool !== \"object\" || !tool) return false;\n  if (\"type\" in tool && tool.type === \"function\" && \"function\" in tool && typeof tool.function === \"object\" && tool.function && \"name\" in tool.function && \"parameters\" in tool.function) {\n    return true;\n  }\n  return false;\n}\nexport const calculateMaxTokens = async ({\n  prompt,\n  modelName\n}) => {\n  let numTokens;\n  try {\n    numTokens = (await encodingForModel(getModelNameForTiktoken(modelName))).encode(prompt).length;\n  } catch (error) {\n    console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n    // fallback to approximate calculation if tiktoken is not available\n    // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n    numTokens = Math.ceil(prompt.length / 4);\n  }\n  const maxTokens = getModelContextSize(modelName);\n  return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Runnable {\n  get lc_attributes() {\n    return {\n      callbacks: undefined,\n      verbose: undefined\n    };\n  }\n  constructor(params) {\n    super(params);\n    /**\n     * Whether to print out response text.\n     */\n    Object.defineProperty(this, \"verbose\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"callbacks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"metadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.verbose = params.verbose ?? getVerbosity();\n    this.callbacks = params.callbacks;\n    this.tags = params.tags ?? [];\n    this.metadata = params.metadata ?? {};\n  }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n  /**\n   * Keys that the language model accepts as call options.\n   */\n  get callKeys() {\n    return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n  }\n  constructor({\n    callbacks,\n    callbackManager,\n    ...params\n  }) {\n    const {\n      cache,\n      ...rest\n    } = params;\n    super({\n      callbacks: callbacks ?? callbackManager,\n      ...rest\n    });\n    /**\n     * The async caller should be used by subclasses to make any async calls,\n     * which will thus benefit from the concurrency and retry logic.\n     */\n    Object.defineProperty(this, \"caller\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"cache\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_encoding\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    if (typeof cache === \"object\") {\n      this.cache = cache;\n    } else if (cache) {\n      this.cache = InMemoryCache.global();\n    } else {\n      this.cache = undefined;\n    }\n    this.caller = new AsyncCaller(params ?? {});\n  }\n  async getNumTokens(content) {\n    // TODO: Figure out correct value.\n    if (typeof content !== \"string\") {\n      return 0;\n    }\n    // fallback to approximate calculation if tiktoken is not available\n    let numTokens = Math.ceil(content.length / 4);\n    if (!this._encoding) {\n      try {\n        this._encoding = await encodingForModel(\"modelName\" in this ? getModelNameForTiktoken(this.modelName) : \"gpt2\");\n      } catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n      }\n    }\n    if (this._encoding) {\n      try {\n        numTokens = this._encoding.encode(content).length;\n      } catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n      }\n    }\n    return numTokens;\n  }\n  static _convertInputToPromptValue(input) {\n    if (typeof input === \"string\") {\n      return new StringPromptValue(input);\n    } else if (Array.isArray(input)) {\n      return new ChatPromptValue(input.map(coerceMessageLikeToMessage));\n    } else {\n      return input;\n    }\n  }\n  /**\n   * Get the identifying parameters of the LLM.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _identifyingParams() {\n    return {};\n  }\n  /**\n   * Create a unique cache key for a specific call to a specific language model.\n   * @param callOptions Call options for the model\n   * @returns A unique cache key.\n   */\n  _getSerializedCacheKeyParametersForCall(\n  // TODO: Fix when we remove the RunnableLambda backwards compatibility shim.\n  {\n    config,\n    ...callOptions\n  }) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const params = {\n      ...this._identifyingParams(),\n      ...callOptions,\n      _type: this._llmType(),\n      _model: this._modelType()\n    };\n    const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n    const serializedEntries = filteredEntries.map(([key, value]) => `${key}:${JSON.stringify(value)}`).sort().join(\",\");\n    return serializedEntries;\n  }\n  /**\n   * @deprecated\n   * Return a json-like object representing this LLM.\n   */\n  serialize() {\n    return {\n      ...this._identifyingParams(),\n      _type: this._llmType(),\n      _model: this._modelType()\n    };\n  }\n  /**\n   * @deprecated\n   * Load an LLM from a json-like object describing it.\n   */\n  static async deserialize(_data) {\n    throw new Error(\"Use .toJSON() instead\");\n  }\n}", "import { concat } from \"../utils/stream.js\";\nimport { Runnable, RunnableAssign, RunnableMap } from \"./base.js\";\nimport { ensureConfig } from \"./config.js\";\n/**\n * A runnable to passthrough inputs unchanged or with additional keys.\n *\n * This runnable behaves almost like the identity function, except that it\n * can be configured to add additional keys to the output, if the input is\n * an object.\n *\n * The example below demonstrates how to use `RunnablePassthrough to\n * passthrough the input from the `.invoke()`\n *\n * @example\n * ```typescript\n * const chain = RunnableSequence.from([\n *   {\n *     question: new RunnablePassthrough(),\n *     context: async () => loadContextFromStore(),\n *   },\n *   prompt,\n *   llm,\n *   outputParser,\n * ]);\n * const response = await chain.invoke(\n *   \"I can pass a single string instead of an object since I'm using `RunnablePassthrough`.\"\n * );\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RunnablePassthrough extends Runnable {\n  static lc_name() {\n    return \"RunnablePassthrough\";\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain_core\", \"runnables\"]\n    });\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"func\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    if (fields) {\n      this.func = fields.func;\n    }\n  }\n  async invoke(input, options) {\n    const config = ensureConfig(options);\n    if (this.func) {\n      await this.func(input, config);\n    }\n    return this._callWithConfig(input => Promise.resolve(input), input, config);\n  }\n  async *transform(generator, options) {\n    const config = ensureConfig(options);\n    let finalOutput;\n    let finalOutputSupported = true;\n    for await (const chunk of this._transformStreamWithConfig(generator, input => input, config)) {\n      yield chunk;\n      if (finalOutputSupported) {\n        if (finalOutput === undefined) {\n          finalOutput = chunk;\n        } else {\n          try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            finalOutput = concat(finalOutput, chunk);\n          } catch {\n            finalOutput = undefined;\n            finalOutputSupported = false;\n          }\n        }\n      }\n    }\n    if (this.func && finalOutput !== undefined) {\n      await this.func(finalOutput, config);\n    }\n  }\n  /**\n   * A runnable that assigns key-value pairs to the input.\n   *\n   * The example below shows how you could use it with an inline function.\n   *\n   * @example\n   * ```typescript\n   * const prompt =\n   *   PromptTemplate.fromTemplate(`Write a SQL query to answer the question using the following schema: {schema}\n   * Question: {question}\n   * SQL Query:`);\n   *\n   * // The `RunnablePassthrough.assign()` is used here to passthrough the input from the `.invoke()`\n   * // call (in this example it's the question), along with any inputs passed to the `.assign()` method.\n   * // In this case, we're passing the schema.\n   * const sqlQueryGeneratorChain = RunnableSequence.from([\n   *   RunnablePassthrough.assign({\n   *     schema: async () => db.getTableInfo(),\n   *   }),\n   *   prompt,\n   *   new ChatOpenAI({}).bind({ stop: [\"\\nSQLResult:\"] }),\n   *   new StringOutputParser(),\n   * ]);\n   * const result = await sqlQueryGeneratorChain.invoke({\n   *   question: \"How many employees are there?\",\n   * });\n   * ```\n   */\n  static assign(mapping) {\n    return new RunnableAssign(new RunnableMap({\n      steps: mapping\n    }));\n  }\n}"],
  "mappings": "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",
  "names": ["len", "i", "len2", "blocks", "base64", "_a", "cache", "input"]
}
