{
  "version": 3,
  "sources": ["../../../../../../node_modules/langchain/dist/chains/combine_docs_chain.js"],
  "sourcesContent": ["import { PromptTemplate } from \"@langchain/core/prompts\";\nimport { BaseChain } from \"./base.js\";\nimport { LLMChain } from \"./llm_chain.js\";\n/**\n * Chain that combines documents by stuffing into context.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nexport class StuffDocumentsChain extends BaseChain {\n  static lc_name() {\n    return \"StuffDocumentsChain\";\n  }\n  get inputKeys() {\n    return [this.inputKey, ...this.llmChain.inputKeys].filter(key => key !== this.documentVariableName);\n  }\n  get outputKeys() {\n    return this.llmChain.outputKeys;\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"llmChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"input_documents\"\n    });\n    Object.defineProperty(this, \"documentVariableName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"context\"\n    });\n    this.llmChain = fields.llmChain;\n    this.documentVariableName = fields.documentVariableName ?? this.documentVariableName;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n  }\n  /** @ignore */\n  _prepInputs(values) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Document key ${this.inputKey} not found.`);\n    }\n    const {\n      [this.inputKey]: docs,\n      ...rest\n    } = values;\n    const texts = docs.map(({\n      pageContent\n    }) => pageContent);\n    const text = texts.join(\"\\n\\n\");\n    return {\n      ...rest,\n      [this.documentVariableName]: text\n    };\n  }\n  /** @ignore */\n  async _call(values, runManager) {\n    const result = await this.llmChain.call(this._prepInputs(values), runManager?.getChild(\"combine_documents\"));\n    return result;\n  }\n  _chainType() {\n    return \"stuff_documents_chain\";\n  }\n  static async deserialize(data) {\n    if (!data.llm_chain) {\n      throw new Error(\"Missing llm_chain\");\n    }\n    return new StuffDocumentsChain({\n      llmChain: await LLMChain.deserialize(data.llm_chain)\n    });\n  }\n  serialize() {\n    return {\n      _type: this._chainType(),\n      llm_chain: this.llmChain.serialize()\n    };\n  }\n}\n/**\n * Combine documents by mapping a chain over them, then combining results.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nexport class MapReduceDocumentsChain extends BaseChain {\n  static lc_name() {\n    return \"MapReduceDocumentsChain\";\n  }\n  get inputKeys() {\n    return [this.inputKey, ...this.combineDocumentChain.inputKeys];\n  }\n  get outputKeys() {\n    return this.combineDocumentChain.outputKeys;\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"llmChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"input_documents\"\n    });\n    Object.defineProperty(this, \"documentVariableName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"context\"\n    });\n    Object.defineProperty(this, \"returnIntermediateSteps\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"maxTokens\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 3000\n    });\n    Object.defineProperty(this, \"maxIterations\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 10\n    });\n    Object.defineProperty(this, \"ensureMapStep\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"combineDocumentChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.llmChain = fields.llmChain;\n    this.combineDocumentChain = fields.combineDocumentChain;\n    this.documentVariableName = fields.documentVariableName ?? this.documentVariableName;\n    this.ensureMapStep = fields.ensureMapStep ?? this.ensureMapStep;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n    this.maxTokens = fields.maxTokens ?? this.maxTokens;\n    this.maxIterations = fields.maxIterations ?? this.maxIterations;\n    this.returnIntermediateSteps = fields.returnIntermediateSteps ?? false;\n  }\n  /** @ignore */\n  async _call(values, runManager) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Document key ${this.inputKey} not found.`);\n    }\n    const {\n      [this.inputKey]: docs,\n      ...rest\n    } = values;\n    let currentDocs = docs;\n    let intermediateSteps = [];\n    // For each iteration, we'll use the `llmChain` to get a new result\n    for (let i = 0; i < this.maxIterations; i += 1) {\n      const inputs = currentDocs.map(d => ({\n        [this.documentVariableName]: d.pageContent,\n        ...rest\n      }));\n      const canSkipMapStep = i !== 0 || !this.ensureMapStep;\n      if (canSkipMapStep) {\n        // Calculate the total tokens required in the input\n        const formatted = await this.combineDocumentChain.llmChain.prompt.format(this.combineDocumentChain._prepInputs({\n          [this.combineDocumentChain.inputKey]: currentDocs,\n          ...rest\n        }));\n        const length = await this.combineDocumentChain.llmChain._getNumTokens(formatted);\n        const withinTokenLimit = length < this.maxTokens;\n        // If we can skip the map step, and we're within the token limit, we don't\n        // need to run the map step, so just break out of the loop.\n        if (withinTokenLimit) {\n          break;\n        }\n      }\n      const results = await this.llmChain.apply(inputs,\n      // If we have a runManager, then we need to create a child for each input\n      // so that we can track the progress of each input.\n      runManager ? Array.from({\n        length: inputs.length\n      }, (_, i) => runManager.getChild(`map_${i + 1}`)) : undefined);\n      const {\n        outputKey\n      } = this.llmChain;\n      // If the flag is set, then concat that to the intermediate steps\n      if (this.returnIntermediateSteps) {\n        intermediateSteps = intermediateSteps.concat(results.map(r => r[outputKey]));\n      }\n      currentDocs = results.map(r => ({\n        pageContent: r[outputKey],\n        metadata: {}\n      }));\n    }\n    // Now, with the final result of all the inputs from the `llmChain`, we can\n    // run the `combineDocumentChain` over them.\n    const newInputs = {\n      [this.combineDocumentChain.inputKey]: currentDocs,\n      ...rest\n    };\n    const result = await this.combineDocumentChain.call(newInputs, runManager?.getChild(\"combine_documents\"));\n    // Return the intermediate steps results if the flag is set\n    if (this.returnIntermediateSteps) {\n      return {\n        ...result,\n        intermediateSteps\n      };\n    }\n    return result;\n  }\n  _chainType() {\n    return \"map_reduce_documents_chain\";\n  }\n  static async deserialize(data) {\n    if (!data.llm_chain) {\n      throw new Error(\"Missing llm_chain\");\n    }\n    if (!data.combine_document_chain) {\n      throw new Error(\"Missing combine_document_chain\");\n    }\n    return new MapReduceDocumentsChain({\n      llmChain: await LLMChain.deserialize(data.llm_chain),\n      combineDocumentChain: await StuffDocumentsChain.deserialize(data.combine_document_chain)\n    });\n  }\n  serialize() {\n    return {\n      _type: this._chainType(),\n      llm_chain: this.llmChain.serialize(),\n      combine_document_chain: this.combineDocumentChain.serialize()\n    };\n  }\n}\n/**\n * Combine documents by doing a first pass and then refining on more documents.\n * @augments BaseChain\n * @augments RefineDocumentsChainInput\n */\nexport class RefineDocumentsChain extends BaseChain {\n  static lc_name() {\n    return \"RefineDocumentsChain\";\n  }\n  get defaultDocumentPrompt() {\n    return new PromptTemplate({\n      inputVariables: [\"page_content\"],\n      template: \"{page_content}\"\n    });\n  }\n  get inputKeys() {\n    return [...new Set([this.inputKey, ...this.llmChain.inputKeys, ...this.refineLLMChain.inputKeys])].filter(key => key !== this.documentVariableName && key !== this.initialResponseName);\n  }\n  get outputKeys() {\n    return [this.outputKey];\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"llmChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"input_documents\"\n    });\n    Object.defineProperty(this, \"outputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"output_text\"\n    });\n    Object.defineProperty(this, \"documentVariableName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"context\"\n    });\n    Object.defineProperty(this, \"initialResponseName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"existing_answer\"\n    });\n    Object.defineProperty(this, \"refineLLMChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"documentPrompt\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.defaultDocumentPrompt\n    });\n    this.llmChain = fields.llmChain;\n    this.refineLLMChain = fields.refineLLMChain;\n    this.documentVariableName = fields.documentVariableName ?? this.documentVariableName;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n    this.outputKey = fields.outputKey ?? this.outputKey;\n    this.documentPrompt = fields.documentPrompt ?? this.documentPrompt;\n    this.initialResponseName = fields.initialResponseName ?? this.initialResponseName;\n  }\n  /** @ignore */\n  async _constructInitialInputs(doc, rest) {\n    const baseInfo = {\n      page_content: doc.pageContent,\n      ...doc.metadata\n    };\n    const documentInfo = {};\n    this.documentPrompt.inputVariables.forEach(value => {\n      documentInfo[value] = baseInfo[value];\n    });\n    const baseInputs = {\n      [this.documentVariableName]: await this.documentPrompt.format({\n        ...documentInfo\n      })\n    };\n    const inputs = {\n      ...baseInputs,\n      ...rest\n    };\n    return inputs;\n  }\n  /** @ignore */\n  async _constructRefineInputs(doc, res) {\n    const baseInfo = {\n      page_content: doc.pageContent,\n      ...doc.metadata\n    };\n    const documentInfo = {};\n    this.documentPrompt.inputVariables.forEach(value => {\n      documentInfo[value] = baseInfo[value];\n    });\n    const baseInputs = {\n      [this.documentVariableName]: await this.documentPrompt.format({\n        ...documentInfo\n      })\n    };\n    const inputs = {\n      [this.initialResponseName]: res,\n      ...baseInputs\n    };\n    return inputs;\n  }\n  /** @ignore */\n  async _call(values, runManager) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Document key ${this.inputKey} not found.`);\n    }\n    const {\n      [this.inputKey]: docs,\n      ...rest\n    } = values;\n    const currentDocs = docs;\n    const initialInputs = await this._constructInitialInputs(currentDocs[0], rest);\n    let res = await this.llmChain.predict({\n      ...initialInputs\n    }, runManager?.getChild(\"answer\"));\n    const refineSteps = [res];\n    for (let i = 1; i < currentDocs.length; i += 1) {\n      const refineInputs = await this._constructRefineInputs(currentDocs[i], res);\n      const inputs = {\n        ...refineInputs,\n        ...rest\n      };\n      res = await this.refineLLMChain.predict({\n        ...inputs\n      }, runManager?.getChild(\"refine\"));\n      refineSteps.push(res);\n    }\n    return {\n      [this.outputKey]: res\n    };\n  }\n  _chainType() {\n    return \"refine_documents_chain\";\n  }\n  static async deserialize(data) {\n    const SerializedLLMChain = data.llm_chain;\n    if (!SerializedLLMChain) {\n      throw new Error(\"Missing llm_chain\");\n    }\n    const SerializedRefineDocumentChain = data.refine_llm_chain;\n    if (!SerializedRefineDocumentChain) {\n      throw new Error(\"Missing refine_llm_chain\");\n    }\n    return new RefineDocumentsChain({\n      llmChain: await LLMChain.deserialize(SerializedLLMChain),\n      refineLLMChain: await LLMChain.deserialize(SerializedRefineDocumentChain)\n    });\n  }\n  serialize() {\n    return {\n      _type: this._chainType(),\n      llm_chain: this.llmChain.serialize(),\n      refine_llm_chain: this.refineLLMChain.serialize()\n    };\n  }\n}"],
  "mappings": "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",
  "names": ["i"]
}
