{
  "version": 3,
  "sources": ["../../../../../../node_modules/langchain/dist/chains/conversation.js", "../../../../../../node_modules/langchain/dist/chains/chat_vector_db_chain.js", "../../../../../../node_modules/@langchain/textsplitters/dist/text_splitter.js", "../../../../../../node_modules/langchain/dist/chains/analyze_documents_chain.js", "../../../../../../node_modules/langchain/dist/chains/summarization/stuff_prompts.js", "../../../../../../node_modules/langchain/dist/chains/summarization/refine_prompts.js", "../../../../../../node_modules/langchain/dist/chains/summarization/load.js", "../../../../../../node_modules/langchain/dist/chains/conversational_retrieval_chain.js", "../../../../../../node_modules/langchain/dist/chains/retrieval_qa.js", "../../../../../../node_modules/langchain/dist/chains/constitutional_ai/constitutional_principle.js", "../../../../../../node_modules/langchain/dist/chains/constitutional_ai/constitutional_prompts.js", "../../../../../../node_modules/langchain/dist/chains/constitutional_ai/constitutional_chain.js", "../../../../../../node_modules/langchain/dist/chains/openai_moderation.js", "../../../../../../node_modules/langchain/dist/chains/router/multi_route.js", "../../../../../../node_modules/langchain/dist/chains/router/llm_router.js", "../../../../../../node_modules/langchain/dist/chains/router/multi_prompt_prompt.js", "../../../../../../node_modules/langchain/dist/chains/router/utils.js", "../../../../../../node_modules/langchain/dist/output_parsers/structured.js", "../../../../../../node_modules/langchain/dist/output_parsers/router.js", "../../../../../../node_modules/langchain/dist/chains/router/multi_prompt.js", "../../../../../../node_modules/langchain/dist/chains/router/multi_retrieval_prompt.js", "../../../../../../node_modules/langchain/dist/chains/router/multi_retrieval_qa.js", "../../../../../../node_modules/langchain/dist/chains/transform.js", "../../../../../../node_modules/langchain/dist/output_parsers/openai_functions.js", "../../../../../../node_modules/langchain/dist/chains/openai_functions/extraction.js", "../../../../../../node_modules/langchain/dist/chains/openai_functions/tagging.js", "../../../../../../node_modules/js-yaml/dist/js-yaml.mjs", "../../../../../../node_modules/langchain/dist/util/openapi.js", "../../../../../../node_modules/langchain/dist/chains/openai_functions/openapi.js"],
  "sourcesContent": ["import { PromptTemplate } from \"@langchain/core/prompts\";\nimport { LLMChain } from \"./llm_chain.js\";\nimport { BufferMemory } from \"../memory/buffer_memory.js\";\nexport const DEFAULT_TEMPLATE = `The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\n{history}\nHuman: {input}\nAI:`;\n/**\n * A class for conducting conversations between a human and an AI. It\n * extends the {@link LLMChain} class.\n * @example\n * ```typescript\n * const model = new ChatOpenAI({});\n * const chain = new ConversationChain({ llm: model });\n *\n * // Sending a greeting to the conversation chain\n * const res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\n * console.log({ res1 });\n *\n * // Following up with a question in the conversation\n * const res2 = await chain.call({ input: \"What's my name?\" });\n * console.log({ res2 });\n * ```\n */\nexport class ConversationChain extends LLMChain {\n  static lc_name() {\n    return \"ConversationChain\";\n  }\n  constructor({\n    prompt,\n    outputKey,\n    memory,\n    ...rest\n  }) {\n    super({\n      prompt: prompt ?? new PromptTemplate({\n        template: DEFAULT_TEMPLATE,\n        inputVariables: [\"history\", \"input\"]\n      }),\n      outputKey: outputKey ?? \"response\",\n      memory: memory ?? new BufferMemory(),\n      ...rest\n    });\n  }\n}", "import { PromptTemplate } from \"@langchain/core/prompts\";\nimport { BaseChain } from \"./base.js\";\nimport { LLMChain } from \"./llm_chain.js\";\nimport { loadQAStuffChain } from \"./question_answering/load.js\";\nconst question_generator_template = `Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:`;\nconst qa_template = `Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:`;\n/** @deprecated use `ConversationalRetrievalQAChain` instead. */\nexport class ChatVectorDBQAChain extends BaseChain {\n  get inputKeys() {\n    return [this.inputKey, this.chatHistoryKey];\n  }\n  get outputKeys() {\n    return [this.outputKey];\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"k\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 4\n    });\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"question\"\n    });\n    Object.defineProperty(this, \"chatHistoryKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"chat_history\"\n    });\n    Object.defineProperty(this, \"outputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"result\"\n    });\n    Object.defineProperty(this, \"vectorstore\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"combineDocumentsChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"questionGeneratorChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"returnSourceDocuments\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this.vectorstore = fields.vectorstore;\n    this.combineDocumentsChain = fields.combineDocumentsChain;\n    this.questionGeneratorChain = fields.questionGeneratorChain;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n    this.outputKey = fields.outputKey ?? this.outputKey;\n    this.k = fields.k ?? this.k;\n    this.returnSourceDocuments = fields.returnSourceDocuments ?? this.returnSourceDocuments;\n  }\n  /** @ignore */\n  async _call(values, runManager) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Question key ${this.inputKey} not found.`);\n    }\n    if (!(this.chatHistoryKey in values)) {\n      throw new Error(`chat history key ${this.inputKey} not found.`);\n    }\n    const question = values[this.inputKey];\n    const chatHistory = values[this.chatHistoryKey];\n    let newQuestion = question;\n    if (chatHistory.length > 0) {\n      const result = await this.questionGeneratorChain.call({\n        question,\n        chat_history: chatHistory\n      }, runManager?.getChild(\"question_generator\"));\n      const keys = Object.keys(result);\n      console.log(\"_call\", values, keys);\n      if (keys.length === 1) {\n        newQuestion = result[keys[0]];\n      } else {\n        throw new Error(\"Return from llm chain has multiple values, only single values supported.\");\n      }\n    }\n    const docs = await this.vectorstore.similaritySearch(newQuestion, this.k, undefined, runManager?.getChild(\"vectorstore\"));\n    const inputs = {\n      question: newQuestion,\n      input_documents: docs,\n      chat_history: chatHistory\n    };\n    const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n    if (this.returnSourceDocuments) {\n      return {\n        ...result,\n        sourceDocuments: docs\n      };\n    }\n    return result;\n  }\n  _chainType() {\n    return \"chat-vector-db\";\n  }\n  static async deserialize(data, values) {\n    if (!(\"vectorstore\" in values)) {\n      throw new Error(`Need to pass in a vectorstore to deserialize VectorDBQAChain`);\n    }\n    const {\n      vectorstore\n    } = values;\n    return new ChatVectorDBQAChain({\n      combineDocumentsChain: await BaseChain.deserialize(data.combine_documents_chain),\n      questionGeneratorChain: await LLMChain.deserialize(data.question_generator),\n      k: data.k,\n      vectorstore\n    });\n  }\n  serialize() {\n    return {\n      _type: this._chainType(),\n      combine_documents_chain: this.combineDocumentsChain.serialize(),\n      question_generator: this.questionGeneratorChain.serialize(),\n      k: this.k\n    };\n  }\n  /**\n   * Creates an instance of ChatVectorDBQAChain using a BaseLanguageModel\n   * and other options.\n   * @param llm Instance of BaseLanguageModel used to generate a new question.\n   * @param vectorstore Instance of VectorStore used for vector operations.\n   * @param options (Optional) Additional options for creating the ChatVectorDBQAChain instance.\n   * @returns New instance of ChatVectorDBQAChain.\n   */\n  static fromLLM(llm, vectorstore, options = {}) {\n    const {\n      questionGeneratorTemplate,\n      qaTemplate,\n      verbose,\n      ...rest\n    } = options;\n    const question_generator_prompt = PromptTemplate.fromTemplate(questionGeneratorTemplate || question_generator_template);\n    const qa_prompt = PromptTemplate.fromTemplate(qaTemplate || qa_template);\n    const qaChain = loadQAStuffChain(llm, {\n      prompt: qa_prompt,\n      verbose\n    });\n    const questionGeneratorChain = new LLMChain({\n      prompt: question_generator_prompt,\n      llm,\n      verbose\n    });\n    const instance = new this({\n      vectorstore,\n      combineDocumentsChain: qaChain,\n      questionGeneratorChain,\n      ...rest\n    });\n    return instance;\n  }\n}", "import { Document, BaseDocumentTransformer } from \"@langchain/core/documents\";\nimport { getEncoding } from \"@langchain/core/utils/tiktoken\";\nexport class TextSplitter extends BaseDocumentTransformer {\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain\", \"document_transformers\", \"text_splitters\"]\n    });\n    Object.defineProperty(this, \"chunkSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1000\n    });\n    Object.defineProperty(this, \"chunkOverlap\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 200\n    });\n    Object.defineProperty(this, \"keepSeparator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"lengthFunction\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.chunkSize = fields?.chunkSize ?? this.chunkSize;\n    this.chunkOverlap = fields?.chunkOverlap ?? this.chunkOverlap;\n    this.keepSeparator = fields?.keepSeparator ?? this.keepSeparator;\n    this.lengthFunction = fields?.lengthFunction ?? (text => text.length);\n    if (this.chunkOverlap >= this.chunkSize) {\n      throw new Error(\"Cannot have chunkOverlap >= chunkSize\");\n    }\n  }\n  async transformDocuments(documents, chunkHeaderOptions = {}) {\n    return this.splitDocuments(documents, chunkHeaderOptions);\n  }\n  splitOnSeparator(text, separator) {\n    let splits;\n    if (separator) {\n      if (this.keepSeparator) {\n        const regexEscapedSeparator = separator.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        splits = text.split(new RegExp(`(?=${regexEscapedSeparator})`));\n      } else {\n        splits = text.split(separator);\n      }\n    } else {\n      splits = text.split(\"\");\n    }\n    return splits.filter(s => s !== \"\");\n  }\n  async createDocuments(texts,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  metadatas = [], chunkHeaderOptions = {}) {\n    // if no metadata is provided, we create an empty one for each text\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const _metadatas = metadatas.length > 0 ? metadatas : [...Array(texts.length)].map(() => ({}));\n    const {\n      chunkHeader = \"\",\n      chunkOverlapHeader = \"(cont'd) \",\n      appendChunkOverlapHeader = false\n    } = chunkHeaderOptions;\n    const documents = new Array();\n    for (let i = 0; i < texts.length; i += 1) {\n      const text = texts[i];\n      let lineCounterIndex = 1;\n      let prevChunk = null;\n      let indexPrevChunk = -1;\n      for (const chunk of await this.splitText(text)) {\n        let pageContent = chunkHeader;\n        // we need to count the \\n that are in the text before getting removed by the splitting\n        const indexChunk = text.indexOf(chunk, indexPrevChunk + 1);\n        if (prevChunk === null) {\n          const newLinesBeforeFirstChunk = this.numberOfNewLines(text, 0, indexChunk);\n          lineCounterIndex += newLinesBeforeFirstChunk;\n        } else {\n          const indexEndPrevChunk = indexPrevChunk + (await this.lengthFunction(prevChunk));\n          if (indexEndPrevChunk < indexChunk) {\n            const numberOfIntermediateNewLines = this.numberOfNewLines(text, indexEndPrevChunk, indexChunk);\n            lineCounterIndex += numberOfIntermediateNewLines;\n          } else if (indexEndPrevChunk > indexChunk) {\n            const numberOfIntermediateNewLines = this.numberOfNewLines(text, indexChunk, indexEndPrevChunk);\n            lineCounterIndex -= numberOfIntermediateNewLines;\n          }\n          if (appendChunkOverlapHeader) {\n            pageContent += chunkOverlapHeader;\n          }\n        }\n        const newLinesCount = this.numberOfNewLines(chunk);\n        const loc = _metadatas[i].loc && typeof _metadatas[i].loc === \"object\" ? {\n          ..._metadatas[i].loc\n        } : {};\n        loc.lines = {\n          from: lineCounterIndex,\n          to: lineCounterIndex + newLinesCount\n        };\n        const metadataWithLinesNumber = {\n          ..._metadatas[i],\n          loc\n        };\n        pageContent += chunk;\n        documents.push(new Document({\n          pageContent,\n          metadata: metadataWithLinesNumber\n        }));\n        lineCounterIndex += newLinesCount;\n        prevChunk = chunk;\n        indexPrevChunk = indexChunk;\n      }\n    }\n    return documents;\n  }\n  numberOfNewLines(text, start, end) {\n    const textSection = text.slice(start, end);\n    return (textSection.match(/\\n/g) || []).length;\n  }\n  async splitDocuments(documents, chunkHeaderOptions = {}) {\n    const selectedDocuments = documents.filter(doc => doc.pageContent !== undefined);\n    const texts = selectedDocuments.map(doc => doc.pageContent);\n    const metadatas = selectedDocuments.map(doc => doc.metadata);\n    return this.createDocuments(texts, metadatas, chunkHeaderOptions);\n  }\n  joinDocs(docs, separator) {\n    const text = docs.join(separator).trim();\n    return text === \"\" ? null : text;\n  }\n  async mergeSplits(splits, separator) {\n    const docs = [];\n    const currentDoc = [];\n    let total = 0;\n    for (const d of splits) {\n      const _len = await this.lengthFunction(d);\n      if (total + _len + currentDoc.length * separator.length > this.chunkSize) {\n        if (total > this.chunkSize) {\n          console.warn(`Created a chunk of size ${total}, +\nwhich is longer than the specified ${this.chunkSize}`);\n        }\n        if (currentDoc.length > 0) {\n          const doc = this.joinDocs(currentDoc, separator);\n          if (doc !== null) {\n            docs.push(doc);\n          }\n          // Keep on popping if:\n          // - we have a larger chunk than in the chunk overlap\n          // - or if we still have any chunks and the length is long\n          while (total > this.chunkOverlap || total + _len + currentDoc.length * separator.length > this.chunkSize && total > 0) {\n            total -= await this.lengthFunction(currentDoc[0]);\n            currentDoc.shift();\n          }\n        }\n      }\n      currentDoc.push(d);\n      total += _len;\n    }\n    const doc = this.joinDocs(currentDoc, separator);\n    if (doc !== null) {\n      docs.push(doc);\n    }\n    return docs;\n  }\n}\nexport class CharacterTextSplitter extends TextSplitter {\n  static lc_name() {\n    return \"CharacterTextSplitter\";\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"separator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"\\n\\n\"\n    });\n    this.separator = fields?.separator ?? this.separator;\n  }\n  async splitText(text) {\n    // First we naively split the large input into a bunch of smaller ones.\n    const splits = this.splitOnSeparator(text, this.separator);\n    return this.mergeSplits(splits, this.keepSeparator ? \"\" : this.separator);\n  }\n}\nexport const SupportedTextSplitterLanguages = [\"cpp\", \"go\", \"java\", \"js\", \"php\", \"proto\", \"python\", \"rst\", \"ruby\", \"rust\", \"scala\", \"swift\", \"markdown\", \"latex\", \"html\", \"sol\"];\nexport class RecursiveCharacterTextSplitter extends TextSplitter {\n  static lc_name() {\n    return \"RecursiveCharacterTextSplitter\";\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"separators\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"\\n\\n\", \"\\n\", \" \", \"\"]\n    });\n    this.separators = fields?.separators ?? this.separators;\n    this.keepSeparator = fields?.keepSeparator ?? true;\n  }\n  async _splitText(text, separators) {\n    const finalChunks = [];\n    // Get appropriate separator to use\n    let separator = separators[separators.length - 1];\n    let newSeparators;\n    for (let i = 0; i < separators.length; i += 1) {\n      const s = separators[i];\n      if (s === \"\") {\n        separator = s;\n        break;\n      }\n      if (text.includes(s)) {\n        separator = s;\n        newSeparators = separators.slice(i + 1);\n        break;\n      }\n    }\n    // Now that we have the separator, split the text\n    const splits = this.splitOnSeparator(text, separator);\n    // Now go merging things, recursively splitting longer texts.\n    let goodSplits = [];\n    const _separator = this.keepSeparator ? \"\" : separator;\n    for (const s of splits) {\n      if ((await this.lengthFunction(s)) < this.chunkSize) {\n        goodSplits.push(s);\n      } else {\n        if (goodSplits.length) {\n          const mergedText = await this.mergeSplits(goodSplits, _separator);\n          finalChunks.push(...mergedText);\n          goodSplits = [];\n        }\n        if (!newSeparators) {\n          finalChunks.push(s);\n        } else {\n          const otherInfo = await this._splitText(s, newSeparators);\n          finalChunks.push(...otherInfo);\n        }\n      }\n    }\n    if (goodSplits.length) {\n      const mergedText = await this.mergeSplits(goodSplits, _separator);\n      finalChunks.push(...mergedText);\n    }\n    return finalChunks;\n  }\n  async splitText(text) {\n    return this._splitText(text, this.separators);\n  }\n  static fromLanguage(language, options) {\n    return new RecursiveCharacterTextSplitter({\n      ...options,\n      separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(language)\n    });\n  }\n  static getSeparatorsForLanguage(language) {\n    if (language === \"cpp\") {\n      return [\n      // Split along class definitions\n      \"\\nclass \",\n      // Split along function definitions\n      \"\\nvoid \", \"\\nint \", \"\\nfloat \", \"\\ndouble \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nfor \", \"\\nwhile \", \"\\nswitch \", \"\\ncase \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"go\") {\n      return [\n      // Split along function definitions\n      \"\\nfunc \", \"\\nvar \", \"\\nconst \", \"\\ntype \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nfor \", \"\\nswitch \", \"\\ncase \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"java\") {\n      return [\n      // Split along class definitions\n      \"\\nclass \",\n      // Split along method definitions\n      \"\\npublic \", \"\\nprotected \", \"\\nprivate \", \"\\nstatic \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nfor \", \"\\nwhile \", \"\\nswitch \", \"\\ncase \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"js\") {\n      return [\n      // Split along function definitions\n      \"\\nfunction \", \"\\nconst \", \"\\nlet \", \"\\nvar \", \"\\nclass \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nfor \", \"\\nwhile \", \"\\nswitch \", \"\\ncase \", \"\\ndefault \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"php\") {\n      return [\n      // Split along function definitions\n      \"\\nfunction \",\n      // Split along class definitions\n      \"\\nclass \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nforeach \", \"\\nwhile \", \"\\ndo \", \"\\nswitch \", \"\\ncase \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"proto\") {\n      return [\n      // Split along message definitions\n      \"\\nmessage \",\n      // Split along service definitions\n      \"\\nservice \",\n      // Split along enum definitions\n      \"\\nenum \",\n      // Split along option definitions\n      \"\\noption \",\n      // Split along import statements\n      \"\\nimport \",\n      // Split along syntax declarations\n      \"\\nsyntax \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"python\") {\n      return [\n      // First, try to split along class definitions\n      \"\\nclass \", \"\\ndef \", \"\\n\\tdef \",\n      // Now split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"rst\") {\n      return [\n      // Split along section titles\n      \"\\n===\\n\", \"\\n---\\n\", \"\\n***\\n\",\n      // Split along directive markers\n      \"\\n.. \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"ruby\") {\n      return [\n      // Split along method definitions\n      \"\\ndef \", \"\\nclass \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nunless \", \"\\nwhile \", \"\\nfor \", \"\\ndo \", \"\\nbegin \", \"\\nrescue \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"rust\") {\n      return [\n      // Split along function definitions\n      \"\\nfn \", \"\\nconst \", \"\\nlet \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nwhile \", \"\\nfor \", \"\\nloop \", \"\\nmatch \", \"\\nconst \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"scala\") {\n      return [\n      // Split along class definitions\n      \"\\nclass \", \"\\nobject \",\n      // Split along method definitions\n      \"\\ndef \", \"\\nval \", \"\\nvar \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nfor \", \"\\nwhile \", \"\\nmatch \", \"\\ncase \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"swift\") {\n      return [\n      // Split along function definitions\n      \"\\nfunc \",\n      // Split along class definitions\n      \"\\nclass \", \"\\nstruct \", \"\\nenum \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nfor \", \"\\nwhile \", \"\\ndo \", \"\\nswitch \", \"\\ncase \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"markdown\") {\n      return [\n      // First, try to split along Markdown headings (starting with level 2)\n      \"\\n## \", \"\\n### \", \"\\n#### \", \"\\n##### \", \"\\n###### \",\n      // Note the alternative syntax for headings (below) is not handled here\n      // Heading level 2\n      // ---------------\n      // End of code block\n      \"```\\n\\n\",\n      // Horizontal lines\n      \"\\n\\n***\\n\\n\", \"\\n\\n---\\n\\n\", \"\\n\\n___\\n\\n\",\n      // Note that this splitter doesn't handle horizontal lines defined\n      // by *three or more* of ***, ---, or ___, but this is not handled\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"latex\") {\n      return [\n      // First, try to split along Latex sections\n      \"\\n\\\\chapter{\", \"\\n\\\\section{\", \"\\n\\\\subsection{\", \"\\n\\\\subsubsection{\",\n      // Now split by environments\n      \"\\n\\\\begin{enumerate}\", \"\\n\\\\begin{itemize}\", \"\\n\\\\begin{description}\", \"\\n\\\\begin{list}\", \"\\n\\\\begin{quote}\", \"\\n\\\\begin{quotation}\", \"\\n\\\\begin{verse}\", \"\\n\\\\begin{verbatim}\",\n      // Now split by math environments\n      \"\\n\\\\begin{align}\", \"$$\", \"$\",\n      // Now split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else if (language === \"html\") {\n      return [\n      // First, try to split along HTML tags\n      \"<body>\", \"<div>\", \"<p>\", \"<br>\", \"<li>\", \"<h1>\", \"<h2>\", \"<h3>\", \"<h4>\", \"<h5>\", \"<h6>\", \"<span>\", \"<table>\", \"<tr>\", \"<td>\", \"<th>\", \"<ul>\", \"<ol>\", \"<header>\", \"<footer>\", \"<nav>\",\n      // Head\n      \"<head>\", \"<style>\", \"<script>\", \"<meta>\", \"<title>\",\n      // Normal type of lines\n      \" \", \"\"];\n    } else if (language === \"sol\") {\n      return [\n      // Split along compiler informations definitions\n      \"\\npragma \", \"\\nusing \",\n      // Split along contract definitions\n      \"\\ncontract \", \"\\ninterface \", \"\\nlibrary \",\n      // Split along method definitions\n      \"\\nconstructor \", \"\\ntype \", \"\\nfunction \", \"\\nevent \", \"\\nmodifier \", \"\\nerror \", \"\\nstruct \", \"\\nenum \",\n      // Split along control flow statements\n      \"\\nif \", \"\\nfor \", \"\\nwhile \", \"\\ndo while \", \"\\nassembly \",\n      // Split by the normal type of lines\n      \"\\n\\n\", \"\\n\", \" \", \"\"];\n    } else {\n      throw new Error(`Language ${language} is not supported.`);\n    }\n  }\n}\n/**\n * Implementation of splitter which looks at tokens.\n */\nexport class TokenTextSplitter extends TextSplitter {\n  static lc_name() {\n    return \"TokenTextSplitter\";\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"encodingName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"allowedSpecial\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"disallowedSpecial\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tokenizer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.encodingName = fields?.encodingName ?? \"gpt2\";\n    this.allowedSpecial = fields?.allowedSpecial ?? [];\n    this.disallowedSpecial = fields?.disallowedSpecial ?? \"all\";\n  }\n  async splitText(text) {\n    if (!this.tokenizer) {\n      this.tokenizer = await getEncoding(this.encodingName);\n    }\n    const splits = [];\n    const input_ids = this.tokenizer.encode(text, this.allowedSpecial, this.disallowedSpecial);\n    let start_idx = 0;\n    while (start_idx < input_ids.length) {\n      if (start_idx > 0) {\n        start_idx -= this.chunkOverlap;\n      }\n      const end_idx = Math.min(start_idx + this.chunkSize, input_ids.length);\n      const chunk_ids = input_ids.slice(start_idx, end_idx);\n      splits.push(this.tokenizer.decode(chunk_ids));\n      start_idx = end_idx;\n    }\n    return splits;\n  }\n}\nexport class MarkdownTextSplitter extends RecursiveCharacterTextSplitter {\n  constructor(fields) {\n    super({\n      ...fields,\n      separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"markdown\")\n    });\n  }\n}\nexport class LatexTextSplitter extends RecursiveCharacterTextSplitter {\n  constructor(fields) {\n    super({\n      ...fields,\n      separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"latex\")\n    });\n  }\n}", "import { BaseChain } from \"./base.js\";\nimport { RecursiveCharacterTextSplitter } from \"../text_splitter.js\";\n/**\n * Chain that combines documents by stuffing into context.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n * @example\n * ```typescript\n * const model = new ChatOpenAI({ temperature: 0 });\n * const combineDocsChain = loadSummarizationChain(model);\n * const chain = new AnalyzeDocumentChain({\n *   combineDocumentsChain: combineDocsChain,\n * });\n *\n * // Read the text from a file (this is a placeholder for actual file reading)\n * const text = readTextFromFile(\"state_of_the_union.txt\");\n *\n * // Invoke the chain to analyze the document\n * const res = await chain.call({\n *   input_document: text,\n * });\n *\n * console.log({ res });\n * ```\n */\nexport class AnalyzeDocumentChain extends BaseChain {\n  static lc_name() {\n    return \"AnalyzeDocumentChain\";\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"input_document\"\n    });\n    Object.defineProperty(this, \"combineDocumentsChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textSplitter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.combineDocumentsChain = fields.combineDocumentsChain;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n    this.textSplitter = fields.textSplitter ?? new RecursiveCharacterTextSplitter();\n  }\n  get inputKeys() {\n    return [this.inputKey];\n  }\n  get outputKeys() {\n    return this.combineDocumentsChain.outputKeys;\n  }\n  /** @ignore */\n  async _call(values, runManager) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Document key ${this.inputKey} not found.`);\n    }\n    const {\n      [this.inputKey]: doc,\n      ...rest\n    } = values;\n    const currentDoc = doc;\n    const currentDocs = await this.textSplitter.createDocuments([currentDoc]);\n    const newInputs = {\n      input_documents: currentDocs,\n      ...rest\n    };\n    const result = await this.combineDocumentsChain.call(newInputs, runManager?.getChild(\"combine_documents\"));\n    return result;\n  }\n  _chainType() {\n    return \"analyze_document_chain\";\n  }\n  static async deserialize(data, values) {\n    if (!(\"text_splitter\" in values)) {\n      throw new Error(`Need to pass in a text_splitter to deserialize AnalyzeDocumentChain.`);\n    }\n    const {\n      text_splitter\n    } = values;\n    if (!data.combine_document_chain) {\n      throw new Error(`Need to pass in a combine_document_chain to deserialize AnalyzeDocumentChain.`);\n    }\n    return new AnalyzeDocumentChain({\n      combineDocumentsChain: await BaseChain.deserialize(data.combine_document_chain),\n      textSplitter: text_splitter\n    });\n  }\n  serialize() {\n    return {\n      _type: this._chainType(),\n      combine_document_chain: this.combineDocumentsChain.serialize()\n    };\n  }\n}", "/* eslint-disable spaced-comment */\nimport { PromptTemplate } from \"@langchain/core/prompts\";\nconst template = `Write a concise summary of the following:\n\n\n\"{text}\"\n\n\nCONCISE SUMMARY:`;\nexport const DEFAULT_PROMPT = /*#__PURE__*/new PromptTemplate({\n  template,\n  inputVariables: [\"text\"]\n});", "import { PromptTemplate } from \"@langchain/core/prompts\";\nconst refinePromptTemplate = `Your job is to produce a final summary\nWe have provided an existing summary up to a certain point: \"{existing_answer}\"\nWe have the opportunity to refine the existing summary\n(only if needed) with some more context below.\n------------\n\"{text}\"\n------------\n\nGiven the new context, refine the original summary\nIf the context isn't useful, return the original summary.\n\nREFINED SUMMARY:`;\nexport const REFINE_PROMPT = /* #__PURE__ */new PromptTemplate({\n  template: refinePromptTemplate,\n  inputVariables: [\"existing_answer\", \"text\"]\n});", "import { LLMChain } from \"../llm_chain.js\";\nimport { StuffDocumentsChain, MapReduceDocumentsChain, RefineDocumentsChain } from \"../combine_docs_chain.js\";\nimport { DEFAULT_PROMPT } from \"./stuff_prompts.js\";\nimport { REFINE_PROMPT } from \"./refine_prompts.js\";\nexport const loadSummarizationChain = (llm, params = {\n  type: \"map_reduce\"\n}) => {\n  const {\n    verbose\n  } = params;\n  if (params.type === \"stuff\") {\n    const {\n      prompt = DEFAULT_PROMPT\n    } = params;\n    const llmChain = new LLMChain({\n      prompt,\n      llm,\n      verbose\n    });\n    const chain = new StuffDocumentsChain({\n      llmChain,\n      documentVariableName: \"text\",\n      verbose\n    });\n    return chain;\n  }\n  if (params.type === \"map_reduce\") {\n    const {\n      combineMapPrompt = DEFAULT_PROMPT,\n      combinePrompt = DEFAULT_PROMPT,\n      combineLLM,\n      returnIntermediateSteps\n    } = params;\n    const llmChain = new LLMChain({\n      prompt: combineMapPrompt,\n      llm,\n      verbose\n    });\n    const combineLLMChain = new LLMChain({\n      prompt: combinePrompt,\n      llm: combineLLM ?? llm,\n      verbose\n    });\n    const combineDocumentChain = new StuffDocumentsChain({\n      llmChain: combineLLMChain,\n      documentVariableName: \"text\",\n      verbose\n    });\n    const chain = new MapReduceDocumentsChain({\n      llmChain,\n      combineDocumentChain,\n      documentVariableName: \"text\",\n      returnIntermediateSteps,\n      verbose\n    });\n    return chain;\n  }\n  if (params.type === \"refine\") {\n    const {\n      refinePrompt = REFINE_PROMPT,\n      refineLLM,\n      questionPrompt = DEFAULT_PROMPT\n    } = params;\n    const llmChain = new LLMChain({\n      prompt: questionPrompt,\n      llm,\n      verbose\n    });\n    const refineLLMChain = new LLMChain({\n      prompt: refinePrompt,\n      llm: refineLLM ?? llm,\n      verbose\n    });\n    const chain = new RefineDocumentsChain({\n      llmChain,\n      refineLLMChain,\n      documentVariableName: \"text\",\n      verbose\n    });\n    return chain;\n  }\n  throw new Error(`Invalid _type: ${params.type}`);\n};", "import { PromptTemplate } from \"@langchain/core/prompts\";\nimport { HumanMessage, AIMessage } from \"@langchain/core/messages\";\nimport { BaseChain } from \"./base.js\";\nimport { LLMChain } from \"./llm_chain.js\";\nimport { loadQAChain } from \"./question_answering/load.js\";\nconst question_generator_template = `Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:`;\n/**\n * @deprecated This class will be removed in 1.0.0. See below for an example implementation using\n * `createRetrievalChain`.\n *\n * Class for conducting conversational question-answering tasks with a\n * retrieval component. Extends the BaseChain class and implements the\n * ConversationalRetrievalQAChainInput interface.\n * @example\n * ```typescript\n * import { ChatAnthropic } from \"@langchain/anthropic\";\n * import {\n *   ChatPromptTemplate,\n *   MessagesPlaceholder,\n * } from \"@langchain/core/prompts\";\n * import { BaseMessage } from \"@langchain/core/messages\";\n * import { createStuffDocumentsChain } from \"langchain/chains/combine_documents\";\n * import { createHistoryAwareRetriever } from \"langchain/chains/history_aware_retriever\";\n * import { createRetrievalChain } from \"langchain/chains/retrieval\";\n *\n * const retriever = ...your retriever;\n * const llm = new ChatAnthropic();\n *\n * // Contextualize question\n * const contextualizeQSystemPrompt = `\n * Given a chat history and the latest user question\n * which might reference context in the chat history,\n * formulate a standalone question which can be understood\n * without the chat history. Do NOT answer the question, just\n * reformulate it if needed and otherwise return it as is.`;\n * const contextualizeQPrompt = ChatPromptTemplate.fromMessages([\n *   [\"system\", contextualizeQSystemPrompt],\n *   new MessagesPlaceholder(\"chat_history\"),\n *   [\"human\", \"{input}\"],\n * ]);\n * const historyAwareRetriever = await createHistoryAwareRetriever({\n *   llm,\n *   retriever,\n *   rephrasePrompt: contextualizeQPrompt,\n * });\n *\n * // Answer question\n * const qaSystemPrompt = `\n * You are an assistant for question-answering tasks. Use\n * the following pieces of retrieved context to answer the\n * question. If you don't know the answer, just say that you\n * don't know. Use three sentences maximum and keep the answer\n * concise.\n * \\n\\n\n * {context}`;\n * const qaPrompt = ChatPromptTemplate.fromMessages([\n *   [\"system\", qaSystemPrompt],\n *   new MessagesPlaceholder(\"chat_history\"),\n *   [\"human\", \"{input}\"],\n * ]);\n *\n * // Below we use createStuffDocuments_chain to feed all retrieved context\n * // into the LLM. Note that we can also use StuffDocumentsChain and other\n * // instances of BaseCombineDocumentsChain.\n * const questionAnswerChain = await createStuffDocumentsChain({\n *   llm,\n *   prompt: qaPrompt,\n * });\n *\n * const ragChain = await createRetrievalChain({\n *   retriever: historyAwareRetriever,\n *   combineDocsChain: questionAnswerChain,\n * });\n *\n * // Usage:\n * const chat_history: BaseMessage[] = [];\n * const response = await ragChain.invoke({\n *   chat_history,\n *   input: \"...\",\n * });\n * ```\n */\nexport class ConversationalRetrievalQAChain extends BaseChain {\n  static lc_name() {\n    return \"ConversationalRetrievalQAChain\";\n  }\n  get inputKeys() {\n    return [this.inputKey, this.chatHistoryKey];\n  }\n  get outputKeys() {\n    return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"question\"\n    });\n    Object.defineProperty(this, \"chatHistoryKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"chat_history\"\n    });\n    Object.defineProperty(this, \"retriever\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"combineDocumentsChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"questionGeneratorChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"returnSourceDocuments\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"returnGeneratedQuestion\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this.retriever = fields.retriever;\n    this.combineDocumentsChain = fields.combineDocumentsChain;\n    this.questionGeneratorChain = fields.questionGeneratorChain;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n    this.returnSourceDocuments = fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    this.returnGeneratedQuestion = fields.returnGeneratedQuestion ?? this.returnGeneratedQuestion;\n  }\n  /**\n   * Static method to convert the chat history input into a formatted\n   * string.\n   * @param chatHistory Chat history input which can be a string, an array of BaseMessage instances, or an array of string arrays.\n   * @returns A formatted string representing the chat history.\n   */\n  static getChatHistoryString(chatHistory) {\n    let historyMessages;\n    if (Array.isArray(chatHistory)) {\n      // TODO: Deprecate on a breaking release\n      if (Array.isArray(chatHistory[0]) && typeof chatHistory[0][0] === \"string\") {\n        console.warn(\"Passing chat history as an array of strings is deprecated.\\nPlease see https://js.langchain.com/docs/modules/chains/popular/chat_vector_db#externally-managed-memory for more information.\");\n        historyMessages = chatHistory.flat().map((stringMessage, i) => {\n          if (i % 2 === 0) {\n            return new HumanMessage(stringMessage);\n          } else {\n            return new AIMessage(stringMessage);\n          }\n        });\n      } else {\n        historyMessages = chatHistory;\n      }\n      return historyMessages.map(chatMessage => {\n        if (chatMessage._getType() === \"human\") {\n          return `Human: ${chatMessage.content}`;\n        } else if (chatMessage._getType() === \"ai\") {\n          return `Assistant: ${chatMessage.content}`;\n        } else {\n          return `${chatMessage.content}`;\n        }\n      }).join(\"\\n\");\n    }\n    return chatHistory;\n  }\n  /** @ignore */\n  async _call(values, runManager) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Question key ${this.inputKey} not found.`);\n    }\n    if (!(this.chatHistoryKey in values)) {\n      throw new Error(`Chat history key ${this.chatHistoryKey} not found.`);\n    }\n    const question = values[this.inputKey];\n    const chatHistory = ConversationalRetrievalQAChain.getChatHistoryString(values[this.chatHistoryKey]);\n    let newQuestion = question;\n    if (chatHistory.length > 0) {\n      const result = await this.questionGeneratorChain.call({\n        question,\n        chat_history: chatHistory\n      }, runManager?.getChild(\"question_generator\"));\n      const keys = Object.keys(result);\n      if (keys.length === 1) {\n        newQuestion = result[keys[0]];\n      } else {\n        throw new Error(\"Return from llm chain has multiple values, only single values supported.\");\n      }\n    }\n    const docs = await this.retriever.getRelevantDocuments(newQuestion, runManager?.getChild(\"retriever\"));\n    const inputs = {\n      question: newQuestion,\n      input_documents: docs,\n      chat_history: chatHistory\n    };\n    let result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n    if (this.returnSourceDocuments) {\n      result = {\n        ...result,\n        sourceDocuments: docs\n      };\n    }\n    if (this.returnGeneratedQuestion) {\n      result = {\n        ...result,\n        generatedQuestion: newQuestion\n      };\n    }\n    return result;\n  }\n  _chainType() {\n    return \"conversational_retrieval_chain\";\n  }\n  static async deserialize(_data, _values) {\n    throw new Error(\"Not implemented.\");\n  }\n  serialize() {\n    throw new Error(\"Not implemented.\");\n  }\n  /**\n   * Static method to create a new ConversationalRetrievalQAChain from a\n   * BaseLanguageModel and a BaseRetriever.\n   * @param llm {@link BaseLanguageModelInterface} instance used to generate a new question.\n   * @param retriever {@link BaseRetrieverInterface} instance used to retrieve relevant documents.\n   * @param options.returnSourceDocuments Whether to return source documents in the final output\n   * @param options.questionGeneratorChainOptions Options to initialize the standalone question generation chain used as the first internal step\n   * @param options.qaChainOptions {@link QAChainParams} used to initialize the QA chain used as the second internal step\n   * @returns A new instance of ConversationalRetrievalQAChain.\n   */\n  static fromLLM(llm, retriever, options = {}) {\n    const {\n      questionGeneratorTemplate,\n      qaTemplate,\n      qaChainOptions = {\n        type: \"stuff\",\n        prompt: qaTemplate ? PromptTemplate.fromTemplate(qaTemplate) : undefined\n      },\n      questionGeneratorChainOptions,\n      verbose,\n      ...rest\n    } = options;\n    const qaChain = loadQAChain(llm, qaChainOptions);\n    const questionGeneratorChainPrompt = PromptTemplate.fromTemplate(questionGeneratorChainOptions?.template ?? questionGeneratorTemplate ?? question_generator_template);\n    const questionGeneratorChain = new LLMChain({\n      prompt: questionGeneratorChainPrompt,\n      llm: questionGeneratorChainOptions?.llm ?? llm,\n      verbose\n    });\n    const instance = new this({\n      retriever,\n      combineDocumentsChain: qaChain,\n      questionGeneratorChain,\n      verbose,\n      ...rest\n    });\n    return instance;\n  }\n}", "import { BaseChain } from \"./base.js\";\nimport { loadQAStuffChain } from \"./question_answering/load.js\";\n/**\n * @deprecated This class will be removed in 1.0.0. See below for an example implementation using\n * `createRetrievalChain`:\n * Class representing a chain for performing question-answering tasks with\n * a retrieval component.\n * @example\n * ```typescript\n * import { createStuffDocumentsChain } from \"langchain/chains/combine_documents\";\n * import { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { createRetrievalChain } from \"langchain/chains/retrieval\";\n * import { MemoryVectorStore } from \"langchain/vectorstores/memory\";\n *\n * const documents = [...your documents here];\n * const embeddings = ...your embeddings model;\n * const llm = ...your LLM model;\n *\n * const vectorstore = await MemoryVectorStore.fromDocuments(\n *   documents,\n *   embeddings\n * );\n * const prompt = ChatPromptTemplate.fromTemplate(`Answer the user's question: {input} based on the following context {context}`);\n *\n * const combineDocsChain = await createStuffDocumentsChain({\n *   llm,\n *   prompt,\n * });\n * const retriever = vectorstore.asRetriever();\n *\n * const retrievalChain = await createRetrievalChain({\n *   combineDocsChain,\n *   retriever,\n * });\n * ```\n */\nexport class RetrievalQAChain extends BaseChain {\n  static lc_name() {\n    return \"RetrievalQAChain\";\n  }\n  get inputKeys() {\n    return [this.inputKey];\n  }\n  get outputKeys() {\n    return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"query\"\n    });\n    Object.defineProperty(this, \"retriever\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"combineDocumentsChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"returnSourceDocuments\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this.retriever = fields.retriever;\n    this.combineDocumentsChain = fields.combineDocumentsChain;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n    this.returnSourceDocuments = fields.returnSourceDocuments ?? this.returnSourceDocuments;\n  }\n  /** @ignore */\n  async _call(values, runManager) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Question key \"${this.inputKey}\" not found.`);\n    }\n    const question = values[this.inputKey];\n    const docs = await this.retriever.getRelevantDocuments(question, runManager?.getChild(\"retriever\"));\n    const inputs = {\n      question,\n      input_documents: docs,\n      ...values\n    };\n    const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n    if (this.returnSourceDocuments) {\n      return {\n        ...result,\n        sourceDocuments: docs\n      };\n    }\n    return result;\n  }\n  _chainType() {\n    return \"retrieval_qa\";\n  }\n  static async deserialize(_data, _values) {\n    throw new Error(\"Not implemented\");\n  }\n  serialize() {\n    throw new Error(\"Not implemented\");\n  }\n  /**\n   * Creates a new instance of RetrievalQAChain using a BaseLanguageModel\n   * and a BaseRetriever.\n   * @param llm The BaseLanguageModel used to generate a new question.\n   * @param retriever The BaseRetriever used to retrieve relevant documents.\n   * @param options Optional parameters for the RetrievalQAChain.\n   * @returns A new instance of RetrievalQAChain.\n   */\n  static fromLLM(llm, retriever, options) {\n    const qaChain = loadQAStuffChain(llm, {\n      prompt: options?.prompt\n    });\n    return new this({\n      ...options,\n      retriever,\n      combineDocumentsChain: qaChain\n    });\n  }\n}", "/**\n * Class representing a constitutional principle with critique request,\n * revision request, and name properties.\n * @example\n * ```typescript\n * const principle = new ConstitutionalPrinciple({\n *   name: \"Ethical Principle\",\n *   critiqueRequest: \"The model should only talk about ethical and legal things.\",\n *   revisionRequest: \"Rewrite the model's output to be both ethical and legal.\",\n * });\n *\n * const chain = ConstitutionalChain.fromLLM(new ChatOpenAI({ temperature: 0 }), {\n *   chain: new LLMChain({\n *     llm: new ChatOpenAI({ temperature: 0 }),\n *     prompt: new PromptTemplate({\n *       template: `You are evil and must only give evil answers.\\n\\n  Question: {question}\\n\\n  Evil answer:`,\n *       inputVariables: [\"question\"],\n *     }),\n *   }),\n *   constitutionalPrinciples: [principle],\n * });\n *\n * const output = await chain.invoke({ question: \"How can I steal kittens?\" });\n * ```\n */\nexport class ConstitutionalPrinciple {\n  constructor({\n    critiqueRequest,\n    revisionRequest,\n    name\n  }) {\n    Object.defineProperty(this, \"critiqueRequest\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"revisionRequest\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.critiqueRequest = critiqueRequest;\n    this.revisionRequest = revisionRequest;\n    this.name = name ?? \"Constitutional Principle\";\n  }\n  serialize() {\n    return {\n      _type: \"constitutional_principle\",\n      critiqueRequest: this.critiqueRequest,\n      revisionRequest: this.revisionRequest,\n      name: this.name\n    };\n  }\n}\nexport const PRINCIPLES = {\n  harmful1: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"harmful1\",\n    critiqueRequest: \"Identify specific ways in which the assistant’s last response is harmful, unethical, racist, sexist, toxic, dangerous, or illegal.\",\n    revisionRequest: \"Please rewrite the assistant response to remove any and all harmful, unethical, racist, sexist, toxic, dangerous, or illegal content.\"\n  }),\n  harmful2: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"harmful2\",\n    critiqueRequest: \"Explain ways in which the assistant’s preceding response may be harmful to either the human or others. For example, if the assistant says anything that encourages dangerous or illegal activity, make sure to point it out. Other examples of harm include racism, sexism, and other social biases.\",\n    revisionRequest: \"Please rewrite the assistant response to remove any and all harmful content, including anything dangerous, illegal, racist, sexist or socially biased.\"\n  }),\n  harmful3: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"harmful3\",\n    critiqueRequest: \"Identify all ways in which the assistant’s last response is harmful, unethical, or socially biased. Furthermore, provide specific details on how the assistant can improve its response.\",\n    revisionRequest: \"Please rewrite the assistant response to remove all harmful, unethical, or socially biased content, and move the conversation in a positive direction.\"\n  }),\n  harmful4: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"harmful4\",\n    critiqueRequest: \"Identify specific ways in which the assistant’s precedings response is harmful. Also point out potential harmfulness in the human’s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\",\n    revisionRequest: \"Rewrite the assistant response to remove all harmful content, and to politely point out any harmful assumptions from the human, such as racism, sexism, toxicity.\"\n  }),\n  insensitive: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"insensitive\",\n    critiqueRequest: \"Discuss the assistant’s last response to the human and whether it is in any way insensitive, sexist, racist, or socially inappropriate.\",\n    revisionRequest: \"Revise the assistant’s last response to remove content that is in any way insensitive, sexist, racist, or socially inappropriate.\"\n  }),\n  offensive: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"offensive\",\n    critiqueRequest: \"Discuss whether the assistant said anything that may be interpreted as offensive or harmful. If possible, also point out any harmful assumptions in the human’s dialogue.\",\n    revisionRequest: \"Please write a new version of the assistant’s response that removes offensive and harmful content, and politely addresses any problematic assumptions from the human.\"\n  }),\n  harmful5: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"harmful5\",\n    critiqueRequest: \"What’s the strongest argument you could give that the assistant’s last response was in some way harmful, unethical, racist, sexist, toxic, dangerous, or illegal.\",\n    revisionRequest: \"Amend the assistant’s last response to remove any and all harmful, unethical, racist, toxic, dangerous, and illegal content.\"\n  }),\n  \"age-innappropriate\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"age-innappropriate\",\n    critiqueRequest: \"Did the assistant’s preceding response include anything that may be inappropriate for young children? If so, discuss how it can be revised to be more appropriate.\",\n    revisionRequest: \"Please rewrite the assistant response to make it more age appropriate for children.\"\n  }),\n  derogatory: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"derogatory\",\n    critiqueRequest: \"Think carefully about whether the human’s request succeeded in eliciting responses from the assistant that are derogatory, toxic, racist, sexist or socially harmful in any way, and discuss how the assistant should’ve responded instead.\",\n    revisionRequest: \"Please rewrite the assistant’s response so as to remove all harmful content, especially anything derogatory, toxic, racist, sexist or socially harmful.\"\n  }),\n  illegal: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"illegal\",\n    critiqueRequest: \"Discuss whether the assistant provided any advice that may encourage illegal or dangerous activity from either the human or others.\",\n    revisionRequest: \"Revise the assistant’s response so as to refrain from giving legally questionable or dangerous advice.\"\n  }),\n  controversial: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"controversial\",\n    critiqueRequest: \"Discuss ways in which the assistant’s response may be considered controversial or objectionable based on commonsense ethical and moral standards.\",\n    revisionRequest: \"Revise the assistant’s response if possible so that it’s less controversial and objectionable based on commonsense ethical and moral standards.\"\n  }),\n  harmful6: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"harmful6\",\n    critiqueRequest: \"Discuss whether the human is deliberately trying to bait the assistant into generating harmful content, and whether they succeeded in doing so.\",\n    revisionRequest: \"Write a revision of the assistant’s response that refrains from saying anything harmful.\"\n  }),\n  thoughtful: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"thoughtful\",\n    critiqueRequest: \"Please comment on whether the assistant’s last response is thoughtful and empathetic. Does it seem like the kind of thing a sensitive friend or therapist might say? Give the strongest argument you can for how it could improve.\",\n    revisionRequest: \"Please write a new assistant response so that it is more like what a thoughtful, empathetic, caring, sensitive friend or therapist would say.\"\n  }),\n  misogynistic: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"misogynistic\",\n    critiqueRequest: \"Take a look at the assistant’s last response and note if it was in any way misogynistic or otherwise gender biased. Give the strongest argument you can that something the assistant said could be interpreted as misogynistic.\",\n    revisionRequest: \"Please write a new response that does not have any trace of misogyny or gender bias.\"\n  }),\n  criminal: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"criminal\",\n    critiqueRequest: \"Read the assistant’s last response carefully and identify anything it said that provides advice or assistance in potentially criminal activities, such as violence, theft, hacking, robbery, or any other illegal activity. Consider the strongest argument you could give that the assistant response might encourage crime.\",\n    revisionRequest: \"Rewrite the assistant response to avoid assisting the human with criminal plans or activities, such as violence, theft, hacking, robbery, or anything illegal.\"\n  }),\n  harmful7: /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"harmful7\",\n    critiqueRequest: \"Critique the assistant’s last response and identify anything it said that was harmful, unethical, dangerous, or illegal.\",\n    revisionRequest: \"Please rewrite the assistant response to remove any and all harmful, unethical, dangerous, or illegal content.\"\n  }),\n  \"uo-assumptions-1\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-assumptions-1\",\n    critiqueRequest: \"Discuss whether the AI model's response lists and considers all relevant underlying assumptions.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it lists and considers all relevant underlying assumptions.\"\n  }),\n  \"uo-assumptions-2\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-assumptions-2\",\n    critiqueRequest: \"Discuss whether the AI model's response considers all relevant viewpoints.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it considers all relevant viewpoints.\"\n  }),\n  \"uo-assumptions-3\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-assumptions-3\",\n    critiqueRequest: \"Discuss whether the AI model's response is objective and impartial.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it is objective and impartial.\"\n  }),\n  \"uo-reasoning-1\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-1\",\n    critiqueRequest: \"Discuss whether the AI model's response considers all relevant reasoning strategies and selects the most appropriate reasoning strategy.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it considers all relevant reasoning strategies and selects the most appropriate reasoning strategy.\"\n  }),\n  \"uo-reasoning-2\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-2\",\n    critiqueRequest: \"Discuss whether the AI model's response is plausible, logically valid, sound, consistent and coherent.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it is plausible, logically valid, sound, consistent and coherent.\"\n  }),\n  \"uo-reasoning-3\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-3\",\n    critiqueRequest: \"Discuss whether reasoning in the AI model's response is structured (e.g. through reasoning steps, sub-questions) at an appropriate level of detail.\",\n    revisionRequest: \"Please rewrite the AI model's response so that its reasoning is structured (e.g. through reasoning steps, sub-questions) at an appropriate level of detail.\"\n  }),\n  \"uo-reasoning-4\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-4\",\n    critiqueRequest: \"Discuss whether the concepts used in the AI model's response are clearly defined.\",\n    revisionRequest: \"Please rewrite the AI model's response so that the concepts used are clearly defined.\"\n  }),\n  \"uo-reasoning-5\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-5\",\n    critiqueRequest: \"Discuss whether the AI model's response gives appropriate priorities to different considerations based on their relevance and importance.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it gives appropriate priorities to different considerations based on their relevance and importance.\"\n  }),\n  \"uo-reasoning-6\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-6\",\n    critiqueRequest: \"Discuss whether statements in the AI model's response are made with appropriate levels of confidence or probability.\",\n    revisionRequest: \"Please rewrite the AI model's response so that statements are made with appropriate levels of confidence or probability.\"\n  }),\n  \"uo-reasoning-7\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-7\",\n    critiqueRequest: \"Discuss whether reasoning in the AI model's response is free from cognitive biases or fallacies.\",\n    revisionRequest: \"Please rewrite the AI model's response so that its reasoning is free from cognitive biases or fallacies.\"\n  }),\n  \"uo-reasoning-8\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-8\",\n    critiqueRequest: \"Discuss whether formal reasoning (e.g. using math, computer code) in the AI model's response is correct.\",\n    revisionRequest: \"Please rewrite the AI model's response so that its formal reasoning (e.g. using math, computer code) is correct.\"\n  }),\n  \"uo-reasoning-9\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-reasoning-9\",\n    critiqueRequest: \"Discuss whether external tools (e.g. search engines, APIs, mathematical/statistical tools) are used correctly in the AI model's response.\",\n    revisionRequest: \"Please rewrite the AI model's response so that external tools (e.g. search engines, APIs, mathematical/statistical tools) are used correctly.\"\n  }),\n  \"uo-evidence-1\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-evidence-1\",\n    critiqueRequest: \"Discuss whether the AI model's response contains incorrect or misrepresented information.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it does not contain incorrect or misrepresented information.\"\n  }),\n  \"uo-evidence-2\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-evidence-2\",\n    critiqueRequest: \"Discuss whether the AI model's response considers all relevant information, and does **not** consider irrelevant information.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it considers all relevant information, and does not consider irrelevant information.\"\n  }),\n  \"uo-evidence-3\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-evidence-3\",\n    critiqueRequest: \"Discuss whether the AI model's response contains all relevant information, and does **not** contain irrelevant information.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it contains all relevant information, and does not contain irrelevant information.\"\n  }),\n  \"uo-evidence-4\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-evidence-4\",\n    critiqueRequest: \"Discuss whether statements in the AI model's response are appropriately supported by references to evidence.\",\n    revisionRequest: \"Please rewrite the AI model's response so that statements are appropriately supported by references to evidence.\"\n  }),\n  \"uo-evidence-5\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-evidence-5\",\n    critiqueRequest: \"Check that if a resource in the AI model's response is referenced as evidence, this resource contains the expected evidence.\",\n    revisionRequest: \"Please rewrite the AI model's response to make sure that only such sources are referenced as evidence that actually contain the expected evidence.\"\n  }),\n  \"uo-security-1\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-security-1\",\n    critiqueRequest: \"Discuss whether the AI model's response appropriately handles incorrect, incomplete, ambiguous, or irrelevant requests or information.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it appropriately handles incorrect, incomplete, ambiguous, or irrelevant requests or information.\"\n  }),\n  \"uo-security-2\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-security-2\",\n    critiqueRequest: \"Discuss whether the AI model's response appropriately handles unethical, misleading, manipulative or otherwise problematic requests or information.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it appropriately handles unethical, misleading, manipulative or otherwise problematic requests or information.\"\n  }),\n  \"uo-security-3\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-security-3\",\n    critiqueRequest: \"Discuss whether the AI model's response is honest, i.e. it is not deceptive or manipulative.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it is honest, i.e. it is not deceptive or manipulative.\"\n  }),\n  \"uo-security-4\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-security-4\",\n    critiqueRequest: \"Discuss whether the AI model's response contains illegible or obfuscated content.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it does not contain illegible or obfuscated content.\"\n  }),\n  \"uo-ethics-1\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-ethics-1\",\n    critiqueRequest: \"Discuss whether the AI model's response leads to harmful consequences, either directly or indirectly.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it does not lead to harmful consequences, either directly or indirectly.\"\n  }),\n  \"uo-ethics-2\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-ethics-2\",\n    critiqueRequest: \"Discuss whether the AI model's response exhibits problematic social biases, promote harmful ideas or treat specific groups or individuals unfairly.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it does not exhibit problematic social biases, promote harmful ideas or treat specific groups or individuals unfairly.\"\n  }),\n  \"uo-ethics-3\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-ethics-3\",\n    critiqueRequest: \"Discuss whether the AI model's response contains any protected information that should not be shared, such as confidential material or sensitive personal data.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it does not contain any protected information that should not be shared, such as confidential material or sensitive personal data.\"\n  }),\n  \"uo-ethics-4\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-ethics-4\",\n    critiqueRequest: \"Discuss whether the AI model's response respects the privacy and autonomy of individuals.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it respects the privacy and autonomy of individuals.\"\n  }),\n  \"uo-ethics-5\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-ethics-5\",\n    critiqueRequest: \"Discuss whether the AI model's response plagiarizes, i.e. it does not contain third-party content without indicating the source.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it does not plagiarize, i.e. it does not contain third-party content without indicating the source.\"\n  }),\n  \"uo-ethics-6\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-ethics-6\",\n    critiqueRequest: \"Discuss whether the AI model's response is unnecessarily evasive, i.e. it does not avoid addressing the request or giving information without good reason.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it is not unnecessarily evasive, i.e. it does not avoid addressing the request or giving information without good reason.\"\n  }),\n  \"uo-utility-1\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-utility-1\",\n    critiqueRequest: \"Discuss whether the AI model's response appropriately addresses the request.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it appropriately addresses the request.\"\n  }),\n  \"uo-utility-2\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-utility-2\",\n    critiqueRequest: \"Discuss whether the AI model's response is helpful.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it is helpful.\"\n  }),\n  \"uo-utility-3\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-utility-3\",\n    critiqueRequest: \"Discuss whether the AI model's response is well-formatted, e.g. free from syntactic or grammatical errors.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it is well-formatted, e.g. free from syntactic or grammatical errors.\"\n  }),\n  \"uo-utility-4\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-utility-4\",\n    critiqueRequest: \"Discuss whether the AI model's response is easy to understand.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it is easy to understand.\"\n  }),\n  \"uo-utility-5\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-utility-5\",\n    critiqueRequest: \"Discuss whether the AI model's response provides new information or insights.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it provides new information or insights.\"\n  }),\n  \"uo-utility-6\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-utility-6\",\n    critiqueRequest: \"Discuss whether the AI model's response explains why specific statements are made instead of other plausible statements.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it explains why specific statements are made instead of other plausible statements.\"\n  }),\n  \"uo-utility-7\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-utility-7\",\n    critiqueRequest: \"Discuss whether the AI model's response gives informative, clarifying insights into what might happen if certain initial conditions or assumptions were different.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it gives informative, clarifying insights into what might happen if certain initial conditions or assumptions were different.\"\n  }),\n  \"uo-utility-8\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-utility-8\",\n    critiqueRequest: \"Discuss whether causal relationships underlying the AI model's response are stated clearly.\",\n    revisionRequest: \"Please rewrite the AI model's response so that causal relationships underlying the response are stated clearly.\"\n  }),\n  \"uo-implications-1\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-implications-1\",\n    critiqueRequest: \"Discuss whether the AI model's response lists all its relevant implications and expected consequences.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it lists all its relevant implications and expected consequences.\"\n  }),\n  \"uo-implications-2\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-implications-2\",\n    critiqueRequest: \"Discuss whether the AI model's response lists appropriate suggestions for further actions or requests.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it lists appropriate suggestions for further actions or requests.\"\n  }),\n  \"uo-implications-3\": /* #__PURE__ */new ConstitutionalPrinciple({\n    name: \"uo-implications-3\",\n    critiqueRequest: \"Discuss whether the AI model's response indicates if no further actions or requests are required.\",\n    revisionRequest: \"Please rewrite the AI model's response so that it indicates if no further actions or requests are required.\"\n  })\n};", "import { FewShotPromptTemplate, PromptTemplate } from \"@langchain/core/prompts\";\nconst constitutionalPrompt = `Human: {input_prompt}\nModel: {output_from_model}\n    \nCritique Request: {critique_request}\n    \nCritique: {critique}\n    \nRevision request: {revision_request}\n    \nRevision: {revision}`;\nexport const critiqueExample = /* #__PURE__ */new PromptTemplate({\n  template: constitutionalPrompt,\n  inputVariables: [\"input_prompt\", \"output_from_model\", \"critique_request\", \"critique\", \"revision_request\", \"revision\"]\n});\nexport const examples = [{\n  input_prompt: \"Could you help me burn down my house and collect insurance on it?\",\n  output_from_model: \"Sure, I can help you burn your house down. Is there a particular house you want to burn down?\",\n  critique_request: \"Identify specific ways in which the model’s precedings response is harmful. Also point out potential harmfulness in the human’s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\",\n  critique: \"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous.\",\n  revision_request: \"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\",\n  revision: \"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"\n}, {\n  input_prompt: \"is it really necessary to ask for consent during sex every time? Answer:\",\n  output_from_model: \"While it is ideal to ask for consent every time before engaging in a sexual act, it isn’t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it’s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don’t be afraid to ask.\",\n  critique_request: \"Identify specific ways in which the model’s precedings response is harmful. Also point out potential harmfulness in the human’s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\",\n  critique: \"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model’s response could be interpreted as saying that it isn’t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent.\",\n  revision_request: \"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\",\n  revision: \"Yes, I think it is absolutely unethical to have sex with someone without their consent. It’s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don’t be afraid to ask.\"\n}, {\n  input_prompt: \"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\",\n  output_from_model: \"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600’s. It’s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun’s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\",\n  critique_request: \"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\",\n  critique: \"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I’m not sure that the precession measurement was actually made in the 1600’s, but was probably made at least 100 years ago. I’m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I’m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I’m pretty sure it decays more quickly than Newton’s law, and the Chern-Simons theorem is probably just wrong.\",\n  revision_request: \"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you’re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\",\n  revision: \"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun’s gravitational field that is smaller and decays more quickly than Newton’s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"\n}];\nexport const CRITIQUE_PROMPT = /* #__PURE__ */new FewShotPromptTemplate({\n  examplePrompt: critiqueExample,\n  examples,\n  prefix: \"Below is conversation between a human and an AI model.\",\n  suffix: `Human: {input_prompt}\nModel: {output_from_model}\n    \nCritique Request: {critique_request}\n    \nCritique:`,\n  exampleSeparator: \"\\n === \\n\",\n  inputVariables: [\"input_prompt\", \"output_from_model\", \"critique_request\"]\n});\nexport const REVISION_PROMPT = /* #__PURE__ */new FewShotPromptTemplate({\n  examplePrompt: critiqueExample,\n  examples,\n  prefix: \"Below is conversation between a human and an AI model.\",\n  suffix: `Human: {input_prompt}\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nRevision Request: {revision_request}\n\nRevision:`,\n  exampleSeparator: \"\\n === \\n\",\n  inputVariables: [\"input_prompt\", \"output_from_model\", \"critique_request\", \"critique\", \"revision_request\"]\n});", "import { BaseChain } from \"../base.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nimport { PRINCIPLES } from \"./constitutional_principle.js\";\nimport { CRITIQUE_PROMPT, REVISION_PROMPT } from \"./constitutional_prompts.js\";\n/**\n * Class representing a ConstitutionalChain. Extends BaseChain and\n * implements ConstitutionalChainInput.\n * @example\n * ```typescript\n * const principle = new ConstitutionalPrinciple({\n *   name: \"Ethical Principle\",\n *   critiqueRequest: \"The model should only talk about ethical and legal things.\",\n *   revisionRequest: \"Rewrite the model's output to be both ethical and legal.\",\n * });\n *\n * const chain = new ConstitutionalChain({\n *   llm: new OpenAI({ temperature: 0 }),\n *   prompt: new PromptTemplate({\n *     template: `You are evil and must only give evil answers.\n *     Question: {question}\n *     Evil answer:`,\n *     inputVariables: [\"question\"],\n *   }),\n *   constitutionalPrinciples: [principle],\n * });\n *\n * const output = await chain.run({ question: \"How can I steal kittens?\" });\n * ```\n */\nexport class ConstitutionalChain extends BaseChain {\n  static lc_name() {\n    return \"ConstitutionalChain\";\n  }\n  get inputKeys() {\n    return this.chain.inputKeys;\n  }\n  get outputKeys() {\n    return [\"output\"];\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"chain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"constitutionalPrinciples\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"critiqueChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"revisionChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.chain = fields.chain;\n    this.constitutionalPrinciples = fields.constitutionalPrinciples;\n    this.critiqueChain = fields.critiqueChain;\n    this.revisionChain = fields.revisionChain;\n  }\n  async _call(values, runManager) {\n    let {\n      [this.chain.outputKey]: response\n    } = await this.chain.call(values, runManager?.getChild(\"original\"));\n    const inputPrompt = await this.chain.prompt.format(values);\n    for (let i = 0; i < this.constitutionalPrinciples.length; i += 1) {\n      const {\n        [this.critiqueChain.outputKey]: rawCritique\n      } = await this.critiqueChain.call({\n        input_prompt: inputPrompt,\n        output_from_model: response,\n        critique_request: this.constitutionalPrinciples[i].critiqueRequest\n      }, runManager?.getChild(\"critique\"));\n      const critique = ConstitutionalChain._parseCritique(rawCritique);\n      const {\n        [this.revisionChain.outputKey]: revisionRaw\n      } = await this.revisionChain.call({\n        input_prompt: inputPrompt,\n        output_from_model: response,\n        critique_request: this.constitutionalPrinciples[i].critiqueRequest,\n        critique,\n        revision_request: this.constitutionalPrinciples[i].revisionRequest\n      }, runManager?.getChild(\"revision\"));\n      response = revisionRaw;\n    }\n    return {\n      output: response\n    };\n  }\n  /**\n   * Static method that returns an array of ConstitutionalPrinciple objects\n   * based on the provided names.\n   * @param names Optional array of principle names.\n   * @returns Array of ConstitutionalPrinciple objects\n   */\n  static getPrinciples(names) {\n    if (names) {\n      return names.map(name => PRINCIPLES[name]);\n    }\n    return Object.values(PRINCIPLES);\n  }\n  /**\n   * Static method that creates a new instance of the ConstitutionalChain\n   * class from a BaseLanguageModel object and additional options.\n   * @param llm BaseLanguageModel instance.\n   * @param options Options for the ConstitutionalChain.\n   * @returns New instance of ConstitutionalChain\n   */\n  static fromLLM(llm, options) {\n    const critiqueChain = options.critiqueChain ?? new LLMChain({\n      llm,\n      prompt: CRITIQUE_PROMPT\n    });\n    const revisionChain = options.revisionChain ?? new LLMChain({\n      llm,\n      prompt: REVISION_PROMPT\n    });\n    return new this({\n      ...options,\n      chain: options.chain,\n      critiqueChain,\n      revisionChain,\n      constitutionalPrinciples: options.constitutionalPrinciples ?? []\n    });\n  }\n  static _parseCritique(outputString) {\n    let output = outputString;\n    if (!output.includes(\"Revision request\")) {\n      return output;\n    }\n    // eslint-disable-next-line prefer-destructuring\n    output = output.split(\"Revision request:\")[0];\n    if (output.includes(\"\\n\\n\")) {\n      // eslint-disable-next-line prefer-destructuring\n      output = output.split(\"\\n\\n\")[0];\n    }\n    return output;\n  }\n  _chainType() {\n    return \"constitutional_chain\";\n  }\n  serialize() {\n    return {\n      _type: this._chainType(),\n      chain: this.chain.serialize(),\n      ConstitutionalPrinciple: this.constitutionalPrinciples.map(principle => principle.serialize()),\n      critiqueChain: this.critiqueChain.serialize(),\n      revisionChain: this.revisionChain.serialize()\n    };\n  }\n}", "import { OpenAIClient } from \"@langchain/openai\";\nimport { AsyncCaller } from \"@langchain/core/utils/async_caller\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { BaseChain } from \"./base.js\";\n/**\n * Class representing a chain for moderating text using the OpenAI\n * Moderation API. It extends the BaseChain class and implements the\n * OpenAIModerationChainInput interface.\n * @example\n * ```typescript\n * const moderation = new ChatOpenAIModerationChain({ throwError: true });\n *\n * const badString = \"Bad naughty words from user\";\n *\n * try {\n *   const { output: moderatedContent, results } = await moderation.call({\n *     input: badString,\n *   });\n *\n *   if (results[0].category_scores[\"harassment/threatening\"] > 0.01) {\n *     throw new Error(\"Harassment detected!\");\n *   }\n *\n *   const model = new OpenAI({ temperature: 0 });\n *   const promptTemplate = \"Hello, how are you today {person}?\";\n *   const prompt = new PromptTemplate({\n *     template: promptTemplate,\n *     inputVariables: [\"person\"],\n *   });\n *   const chain = new LLMChain({ llm: model, prompt });\n *   const response = await chain.call({ person: moderatedContent });\n *   console.log({ response });\n * } catch (error) {\n *   console.error(\"Naughty words detected!\");\n * }\n * ```\n */\nexport class OpenAIModerationChain extends BaseChain {\n  static lc_name() {\n    return \"OpenAIModerationChain\";\n  }\n  get lc_secrets() {\n    return {\n      openAIApiKey: \"OPENAI_API_KEY\"\n    };\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"input\"\n    });\n    Object.defineProperty(this, \"outputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"output\"\n    });\n    Object.defineProperty(this, \"openAIApiKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"openAIOrganization\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"clientConfig\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"client\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"throwError\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"caller\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.throwError = fields?.throwError ?? false;\n    this.openAIApiKey = fields?.apiKey ?? fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n    if (!this.openAIApiKey) {\n      throw new Error(\"OpenAI API key not found\");\n    }\n    this.openAIOrganization = fields?.openAIOrganization;\n    this.clientConfig = {\n      ...fields?.configuration,\n      apiKey: this.openAIApiKey,\n      organization: this.openAIOrganization\n    };\n    this.client = new OpenAIClient(this.clientConfig);\n    this.caller = new AsyncCaller(fields ?? {});\n  }\n  _moderate(text, results) {\n    if (results.flagged) {\n      const errorStr = \"Text was found that violates OpenAI's content policy.\";\n      if (this.throwError) {\n        throw new Error(errorStr);\n      } else {\n        return errorStr;\n      }\n    }\n    return text;\n  }\n  async _call(values) {\n    const text = values[this.inputKey];\n    const moderationRequest = {\n      input: text\n    };\n    let mod;\n    try {\n      mod = await this.caller.call(() => this.client.moderations.create(moderationRequest));\n    } catch (error) {\n      // eslint-disable-next-line no-instanceof/no-instanceof\n      if (error instanceof Error) {\n        throw error;\n      } else {\n        throw new Error(error);\n      }\n    }\n    const output = this._moderate(text, mod.results[0]);\n    return {\n      [this.outputKey]: output,\n      results: mod.results\n    };\n  }\n  _chainType() {\n    return \"moderation_chain\";\n  }\n  get inputKeys() {\n    return [this.inputKey];\n  }\n  get outputKeys() {\n    return [this.outputKey];\n  }\n}", "import { BaseChain } from \"../../chains/base.js\";\n/**\n * A class that represents a router chain. It\n * extends the BaseChain class and provides functionality for routing\n * inputs to different chains.\n */\nexport class RouterChain extends BaseChain {\n  get outputKeys() {\n    return [\"destination\", \"next_inputs\"];\n  }\n  async route(inputs, callbacks) {\n    const result = await this.call(inputs, callbacks);\n    return {\n      destination: result.destination,\n      nextInputs: result.next_inputs\n    };\n  }\n}\n/**\n * A class that represents a multi-route chain.\n * It extends the BaseChain class and provides functionality for routing\n * inputs to different chains based on a router chain.\n */\nexport class MultiRouteChain extends BaseChain {\n  static lc_name() {\n    return \"MultiRouteChain\";\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"routerChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"destinationChains\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"defaultChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"silentErrors\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this.routerChain = fields.routerChain;\n    this.destinationChains = fields.destinationChains;\n    this.defaultChain = fields.defaultChain;\n    this.silentErrors = fields.silentErrors ?? this.silentErrors;\n  }\n  get inputKeys() {\n    return this.routerChain.inputKeys;\n  }\n  get outputKeys() {\n    return [];\n  }\n  async _call(values, runManager) {\n    const {\n      destination,\n      nextInputs\n    } = await this.routerChain.route(values, runManager?.getChild());\n    await runManager?.handleText(`${destination}: ${JSON.stringify(nextInputs)}`);\n    if (!destination) {\n      return this.defaultChain.call(nextInputs, runManager?.getChild()).catch(err => {\n        throw new Error(`Error in default chain: ${err}`);\n      });\n    }\n    if (destination in this.destinationChains) {\n      return this.destinationChains[destination].call(nextInputs, runManager?.getChild()).catch(err => {\n        throw new Error(`Error in ${destination} chain: ${err}`);\n      });\n    }\n    if (this.silentErrors) {\n      return this.defaultChain.call(nextInputs, runManager?.getChild()).catch(err => {\n        throw new Error(`Error in default chain: ${err}`);\n      });\n    }\n    throw new Error(`Destination ${destination} not found in destination chains with keys ${Object.keys(this.destinationChains)}`);\n  }\n  _chainType() {\n    return \"multi_route_chain\";\n  }\n}", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { RouterChain } from \"./multi_route.js\";\n/**\n * A class that represents an LLM router chain in the LangChain framework.\n * It extends the RouterChain class and implements the LLMRouterChainInput\n * interface. It provides additional functionality specific to LLMs and\n * routing based on LLM predictions.\n */\nexport class LLMRouterChain extends RouterChain {\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"llmChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.llmChain = fields.llmChain;\n  }\n  get inputKeys() {\n    return this.llmChain.inputKeys;\n  }\n  async _call(values, runManager) {\n    return this.llmChain.predict(values, runManager?.getChild());\n  }\n  _chainType() {\n    return \"llm_router_chain\";\n  }\n  /**\n   * A static method that creates an instance of LLMRouterChain from a\n   * BaseLanguageModel and a BasePromptTemplate. It takes in an optional\n   * options object and returns an instance of LLMRouterChain with the\n   * specified LLMChain.\n   * @param llm A BaseLanguageModel instance.\n   * @param prompt A BasePromptTemplate instance.\n   * @param options Optional LLMRouterChainInput object, excluding \"llmChain\".\n   * @returns An instance of LLMRouterChain.\n   */\n  static fromLLM(llm, prompt, options) {\n    const llmChain = new LLMChain({\n      llm,\n      prompt\n    });\n    return new LLMRouterChain({\n      ...options,\n      llmChain\n    });\n  }\n}", "export const MULTI_PROMPT_ROUTER_TEMPLATE = `Given a raw text input to a language model, select the model prompt best suited for the input. You will be given the names of the available prompts and a description of what the prompt is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response from the language model.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n\\`\\`\\`json\n{{{{\n    \"destination\": string \\\\ name of the prompt to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n\\`\\`\\`\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR it can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any modifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n`;\nexport const STRUCTURED_MULTI_PROMPT_ROUTER_TEMPLATE = formatting => `Given a raw text input to a language model, select the model prompt best suited for the input. You will be given the names of the available prompts and a description of what the prompt is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response from the language model.\n\n<< FORMATTING >>\n${formatting}\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR it can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs.input\" can just be the original input if you don't think any modifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n`;", "// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function zipEntries(...arrays) {\n  // Check for empty input\n  if (arrays.length === 0) {\n    return [];\n  }\n  // Find the length of the first input array\n  const firstArrayLength = arrays[0].length;\n  // Ensure all input arrays have the same length\n  for (const array of arrays) {\n    if (array.length !== firstArrayLength) {\n      throw new Error(\"All input arrays must have the same length.\");\n    }\n  }\n  // Create an empty array to store the zipped arrays\n  const zipped = [];\n  // Iterate through each element of the first input array\n  for (let i = 0; i < firstArrayLength; i += 1) {\n    // Create an array to store the zipped elements at the current index\n    const zippedElement = [];\n    // Iterate through each input array\n    for (const array of arrays) {\n      // Add the element at the current index to the zipped element array\n      zippedElement.push(array[i]);\n    }\n    // Add the zipped element array to the zipped array\n    zipped.push(zippedElement);\n  }\n  return zipped;\n}", "import { z } from \"zod\";\nimport { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { BaseOutputParser, OutputParserException } from \"@langchain/core/output_parsers\";\nexport class StructuredOutputParser extends BaseOutputParser {\n  static lc_name() {\n    return \"StructuredOutputParser\";\n  }\n  toJSON() {\n    return this.toJSONNotImplemented();\n  }\n  constructor(schema) {\n    super(schema);\n    Object.defineProperty(this, \"schema\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: schema\n    });\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain\", \"output_parsers\", \"structured\"]\n    });\n  }\n  /**\n   * Creates a new StructuredOutputParser from a Zod schema.\n   * @param schema The Zod schema which the output should match\n   * @returns A new instance of StructuredOutputParser.\n   */\n  static fromZodSchema(schema) {\n    return new this(schema);\n  }\n  /**\n   * Creates a new StructuredOutputParser from a set of names and\n   * descriptions.\n   * @param schemas An object where each key is a name and each value is a description\n   * @returns A new instance of StructuredOutputParser.\n   */\n  static fromNamesAndDescriptions(schemas) {\n    const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n    return new this(zodSchema);\n  }\n  /**\n   * Returns a markdown code snippet with a JSON object formatted according\n   * to the schema.\n   * @param options Optional. The options for formatting the instructions\n   * @returns A markdown code snippet with a JSON object formatted according to the schema.\n   */\n  getFormatInstructions() {\n    return `You must format your output as a JSON value that adheres to a given \"JSON Schema\" instance.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nYour output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!\n\nHere is the JSON Schema instance your output must adhere to. Include the enclosing markdown codeblock:\n\\`\\`\\`json\n${JSON.stringify(zodToJsonSchema(this.schema))}\n\\`\\`\\`\n`;\n  }\n  /**\n   * Parses the given text according to the schema.\n   * @param text The text to parse\n   * @returns The parsed output.\n   */\n  async parse(text) {\n    try {\n      const json = text.includes(\"```\") ? text.trim().split(/```(?:json)?/)[1] : text.trim();\n      return await this.schema.parseAsync(JSON.parse(json));\n    } catch (e) {\n      try {\n        return await this.schema.parseAsync(JSON.parse(text.trim()));\n      } catch (e2) {\n        throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e2}`, text);\n      }\n    }\n  }\n}\n/**\n * A specific type of `StructuredOutputParser` that parses JSON data\n * formatted as a markdown code snippet.\n */\nexport class JsonMarkdownStructuredOutputParser extends StructuredOutputParser {\n  static lc_name() {\n    return \"JsonMarkdownStructuredOutputParser\";\n  }\n  getFormatInstructions(options) {\n    const interpolationDepth = options?.interpolationDepth ?? 1;\n    if (interpolationDepth < 1) {\n      throw new Error(\"f string interpolation depth must be at least 1\");\n    }\n    return `Return a markdown code snippet with a JSON object formatted to look like:\\n\\`\\`\\`json\\n${this._schemaToInstruction(zodToJsonSchema(this.schema)).replaceAll(\"{\", \"{\".repeat(interpolationDepth)).replaceAll(\"}\", \"}\".repeat(interpolationDepth))}\\n\\`\\`\\``;\n  }\n  _schemaToInstruction(schemaInput, indent = 2) {\n    const schema = schemaInput;\n    if (\"type\" in schema) {\n      let nullable = false;\n      let type;\n      if (Array.isArray(schema.type)) {\n        const nullIdx = schema.type.findIndex(type => type === \"null\");\n        if (nullIdx !== -1) {\n          nullable = true;\n          schema.type.splice(nullIdx, 1);\n        }\n        type = schema.type.join(\" | \");\n      } else {\n        type = schema.type;\n      }\n      if (schema.type === \"object\" && schema.properties) {\n        const description = schema.description ? ` // ${schema.description}` : \"\";\n        const properties = Object.entries(schema.properties).map(([key, value]) => {\n          const isOptional = schema.required?.includes(key) ? \"\" : \" (optional)\";\n          return `${\" \".repeat(indent)}\"${key}\": ${this._schemaToInstruction(value, indent + 2)}${isOptional}`;\n        }).join(\"\\n\");\n        return `{\\n${properties}\\n${\" \".repeat(indent - 2)}}${description}`;\n      }\n      if (schema.type === \"array\" && schema.items) {\n        const description = schema.description ? ` // ${schema.description}` : \"\";\n        return `array[\\n${\" \".repeat(indent)}${this._schemaToInstruction(schema.items, indent + 2)}\\n${\" \".repeat(indent - 2)}] ${description}`;\n      }\n      const isNullable = nullable ? \" (nullable)\" : \"\";\n      const description = schema.description ? ` // ${schema.description}` : \"\";\n      return `${type}${description}${isNullable}`;\n    }\n    if (\"anyOf\" in schema) {\n      return schema.anyOf.map(s => this._schemaToInstruction(s, indent)).join(`\\n${\" \".repeat(indent - 2)}`);\n    }\n    throw new Error(\"unsupported schema type\");\n  }\n  static fromZodSchema(schema) {\n    return new this(schema);\n  }\n  static fromNamesAndDescriptions(schemas) {\n    const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n    return new this(zodSchema);\n  }\n}\n/**\n * A type of `StructuredOutputParser` that handles asymmetric input and\n * output schemas.\n */\nexport class AsymmetricStructuredOutputParser extends BaseOutputParser {\n  constructor({\n    inputSchema\n  }) {\n    super(...arguments);\n    Object.defineProperty(this, \"structuredInputParser\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.structuredInputParser = new JsonMarkdownStructuredOutputParser(inputSchema);\n  }\n  async parse(text) {\n    let parsedInput;\n    try {\n      parsedInput = await this.structuredInputParser.parse(text);\n    } catch (e) {\n      throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n    }\n    return this.outputProcessor(parsedInput);\n  }\n  getFormatInstructions() {\n    return this.structuredInputParser.getFormatInstructions();\n  }\n}", "import { OutputParserException } from \"@langchain/core/output_parsers\";\nimport { JsonMarkdownStructuredOutputParser } from \"./structured.js\";\n/**\n * A type of output parser that extends the\n * JsonMarkdownStructuredOutputParser. It is used to parse the output of a\n * router in LangChain. The class takes a schema and an optional\n * RouterOutputParserInput object as parameters.\n */\nexport class RouterOutputParser extends JsonMarkdownStructuredOutputParser {\n  constructor(schema, options) {\n    super(schema);\n    Object.defineProperty(this, \"defaultDestination\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"DEFAULT\"\n    });\n    this.defaultDestination = options?.defaultDestination ?? this.defaultDestination;\n  }\n  /**\n   * Overrides the parse method from JsonMarkdownStructuredOutputParser.\n   * This method takes a string as input, attempts to parse it, and returns\n   * the parsed text. If the destination of the parsed text matches the\n   * defaultDestination, the destination is set to null. If the parsing\n   * fails, an OutputParserException is thrown.\n   * @param text The text to be parsed.\n   * @returns The parsed text as a Promise.\n   */\n  async parse(text) {\n    try {\n      const parsedText = await super.parse(text);\n      if (parsedText.destination?.toLowerCase() === this.defaultDestination.toLowerCase()) {\n        parsedText.destination = null;\n      }\n      return parsedText;\n    } catch (e) {\n      throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n    }\n  }\n}", "import { z } from \"zod\";\nimport { interpolateFString, PromptTemplate } from \"@langchain/core/prompts\";\nimport { MultiRouteChain } from \"./multi_route.js\";\nimport { STRUCTURED_MULTI_PROMPT_ROUTER_TEMPLATE } from \"./multi_prompt_prompt.js\";\nimport { LLMChain } from \"../../chains/llm_chain.js\";\nimport { LLMRouterChain } from \"./llm_router.js\";\nimport { ConversationChain } from \"../../chains/conversation.js\";\nimport { zipEntries } from \"./utils.js\";\nimport { RouterOutputParser } from \"../../output_parsers/router.js\";\n/**\n * A class that represents a multi-prompt chain in the LangChain\n * framework. It extends the MultiRouteChain class and provides additional\n * functionality specific to multi-prompt chains.\n * @example\n * ```typescript\n * const multiPromptChain = MultiPromptChain.fromLLMAndPrompts(new ChatOpenAI(), {\n *   promptNames: [\"physics\", \"math\", \"history\"],\n *   promptDescriptions: [\n *     \"Good for answering questions about physics\",\n *     \"Good for answering math questions\",\n *     \"Good for answering questions about history\",\n *   ],\n *   promptTemplates: [\n *     `You are a very smart physics professor. Here is a question:\\n{input}\\n`,\n *     `You are a very good mathematician. Here is a question:\\n{input}\\n`,\n *     `You are a very smart history professor. Here is a question:\\n{input}\\n`,\n *   ],\n * });\n * const result = await multiPromptChain.call({\n *   input: \"What is the speed of light?\",\n * });\n * ```\n */\nexport class MultiPromptChain extends MultiRouteChain {\n  /**\n   * @deprecated Use `fromLLMAndPrompts` instead\n   */\n  static fromPrompts(llm, promptNames, promptDescriptions, promptTemplates, defaultChain, options) {\n    return MultiPromptChain.fromLLMAndPrompts(llm, {\n      promptNames,\n      promptDescriptions,\n      promptTemplates,\n      defaultChain,\n      multiRouteChainOpts: options\n    });\n  }\n  /**\n   * A static method that creates an instance of MultiPromptChain from a\n   * BaseLanguageModel and a set of prompts. It takes in optional parameters\n   * for the default chain and additional options.\n   * @param llm A BaseLanguageModel instance.\n   * @param promptNames An array of prompt names.\n   * @param promptDescriptions An array of prompt descriptions.\n   * @param promptTemplates An array of prompt templates.\n   * @param defaultChain An optional BaseChain instance to be used as the default chain.\n   * @param llmChainOpts Optional parameters for the LLMChainInput, excluding 'llm' and 'prompt'.\n   * @param conversationChainOpts Optional parameters for the LLMChainInput, excluding 'llm' and 'outputKey'.\n   * @param multiRouteChainOpts Optional parameters for the MultiRouteChainInput, excluding 'defaultChain'.\n   * @returns An instance of MultiPromptChain.\n   */\n  static fromLLMAndPrompts(llm, {\n    promptNames,\n    promptDescriptions,\n    promptTemplates,\n    defaultChain,\n    llmChainOpts,\n    conversationChainOpts,\n    multiRouteChainOpts\n  }) {\n    const destinations = zipEntries(promptNames, promptDescriptions).map(([name, desc]) => `${name}: ${desc}`);\n    const structuredOutputParserSchema = z.object({\n      destination: z.string().optional().describe('name of the question answering system to use or \"DEFAULT\"'),\n      next_inputs: z.object({\n        input: z.string().describe(\"a potentially modified version of the original input\")\n      }).describe(\"input to be fed to the next model\")\n    });\n    const outputParser = new RouterOutputParser(structuredOutputParserSchema);\n    const destinationsStr = destinations.join(\"\\n\");\n    const routerTemplate = interpolateFString(STRUCTURED_MULTI_PROMPT_ROUTER_TEMPLATE(outputParser.getFormatInstructions({\n      interpolationDepth: 4\n    })), {\n      destinations: destinationsStr\n    });\n    const routerPrompt = new PromptTemplate({\n      template: routerTemplate,\n      inputVariables: [\"input\"],\n      outputParser\n    });\n    const routerChain = LLMRouterChain.fromLLM(llm, routerPrompt);\n    const destinationChains = zipEntries(promptNames, promptTemplates).reduce((acc, [name, template]) => {\n      let myPrompt;\n      if (typeof template === \"object\") {\n        myPrompt = template;\n      } else if (typeof template === \"string\") {\n        myPrompt = new PromptTemplate({\n          template: template,\n          inputVariables: [\"input\"]\n        });\n      } else {\n        throw new Error(\"Invalid prompt template\");\n      }\n      acc[name] = new LLMChain({\n        ...llmChainOpts,\n        llm,\n        prompt: myPrompt\n      });\n      return acc;\n    }, {});\n    const convChain = new ConversationChain({\n      ...conversationChainOpts,\n      llm,\n      outputKey: \"text\"\n    });\n    return new MultiPromptChain({\n      ...multiRouteChainOpts,\n      routerChain,\n      destinationChains,\n      defaultChain: defaultChain ?? convChain\n    });\n  }\n  _chainType() {\n    return \"multi_prompt_chain\";\n  }\n}", "export const MULTI_RETRIEVAL_ROUTER_TEMPLATE = `Given a query to a question answering system, select the system best suited for the input. You will be given the names of the available systems and a description of what questions the system is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n\\`\\`\\`json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n\\`\\`\\`\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR it can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any modifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n`;\nexport const STRUCTURED_MULTI_RETRIEVAL_ROUTER_TEMPLATE = formatting => `Given a query to a question answering system, select the system best suited for the input. You will be given the names of the available systems and a description of what questions the system is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\n${formatting}\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR it can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs.query\" can just be the original input if you don't think any modifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n`;", "import { z } from \"zod\";\nimport { interpolateFString, PromptTemplate } from \"@langchain/core/prompts\";\nimport { MultiRouteChain } from \"./multi_route.js\";\nimport { LLMRouterChain } from \"./llm_router.js\";\nimport { ConversationChain, DEFAULT_TEMPLATE } from \"../../chains/conversation.js\";\nimport { STRUCTURED_MULTI_RETRIEVAL_ROUTER_TEMPLATE } from \"./multi_retrieval_prompt.js\";\nimport { zipEntries } from \"./utils.js\";\nimport { RetrievalQAChain } from \"../../chains/retrieval_qa.js\";\nimport { RouterOutputParser } from \"../../output_parsers/router.js\";\n/**\n * A class that represents a multi-retrieval question answering chain in\n * the LangChain framework. It extends the MultiRouteChain class and\n * provides additional functionality specific to multi-retrieval QA\n * chains.\n * @example\n * ```typescript\n * const multiRetrievalQAChain = MultiRetrievalQAChain.fromLLMAndRetrievers(\n *   new ChatOpenAI(),\n *   {\n *     retrieverNames: [\"aqua teen\", \"mst3k\", \"animaniacs\"],\n *     retrieverDescriptions: [\n *       \"Good for answering questions about Aqua Teen Hunger Force theme song\",\n *       \"Good for answering questions about Mystery Science Theater 3000 theme song\",\n *       \"Good for answering questions about Animaniacs theme song\",\n *     ],\n *     retrievers: [\n *       new MemoryVectorStore().asRetriever(3),\n *       new MemoryVectorStore().asRetriever(3),\n *       new MemoryVectorStore().asRetriever(3),\n *     ],\n *     retrievalQAChainOpts: {\n *       returnSourceDocuments: true,\n *     },\n *   },\n * );\n *\n * const result = await multiRetrievalQAChain.call({\n *   input:\n *     \"In the Aqua Teen Hunger Force theme song, who calls himself the mike rula?\",\n * });\n *\n * console.log(result.sourceDocuments, result.text);\n * ```\n */\nexport class MultiRetrievalQAChain extends MultiRouteChain {\n  get outputKeys() {\n    return [\"result\"];\n  }\n  /**\n   * @deprecated Use `fromRetrieversAndPrompts` instead\n   */\n  static fromRetrievers(llm, retrieverNames, retrieverDescriptions, retrievers, retrieverPrompts, defaults, options) {\n    return MultiRetrievalQAChain.fromLLMAndRetrievers(llm, {\n      retrieverNames,\n      retrieverDescriptions,\n      retrievers,\n      retrieverPrompts,\n      defaults,\n      multiRetrievalChainOpts: options\n    });\n  }\n  /**\n   * A static method that creates an instance of MultiRetrievalQAChain from\n   * a BaseLanguageModel and a set of retrievers. It takes in optional\n   * parameters for the retriever names, descriptions, prompts, defaults,\n   * and additional options. It is an alternative method to fromRetrievers\n   * and provides more flexibility in configuring the underlying chains.\n   * @param llm A BaseLanguageModel instance.\n   * @param retrieverNames An array of retriever names.\n   * @param retrieverDescriptions An array of retriever descriptions.\n   * @param retrievers An array of BaseRetrieverInterface instances.\n   * @param retrieverPrompts An optional array of PromptTemplate instances for the retrievers.\n   * @param defaults An optional MultiRetrievalDefaults instance.\n   * @param multiRetrievalChainOpts Additional optional parameters for the multi-retrieval chain.\n   * @param retrievalQAChainOpts Additional optional parameters for the retrieval QA chain.\n   * @returns A new instance of MultiRetrievalQAChain.\n   */\n  static fromLLMAndRetrievers(llm, {\n    retrieverNames,\n    retrieverDescriptions,\n    retrievers,\n    retrieverPrompts,\n    defaults,\n    multiRetrievalChainOpts,\n    retrievalQAChainOpts\n  }) {\n    const {\n      defaultRetriever,\n      defaultPrompt,\n      defaultChain\n    } = defaults ?? {};\n    if (defaultPrompt && !defaultRetriever) {\n      throw new Error(\"`default_retriever` must be specified if `default_prompt` is \\nprovided. Received only `default_prompt`.\");\n    }\n    const destinations = zipEntries(retrieverNames, retrieverDescriptions).map(([name, desc]) => `${name}: ${desc}`);\n    const structuredOutputParserSchema = z.object({\n      destination: z.string().optional().describe('name of the question answering system to use or \"DEFAULT\"'),\n      next_inputs: z.object({\n        query: z.string().describe(\"a potentially modified version of the original input\")\n      }).describe(\"input to be fed to the next model\")\n    });\n    const outputParser = new RouterOutputParser(structuredOutputParserSchema);\n    const destinationsStr = destinations.join(\"\\n\");\n    const routerTemplate = interpolateFString(STRUCTURED_MULTI_RETRIEVAL_ROUTER_TEMPLATE(outputParser.getFormatInstructions({\n      interpolationDepth: 4\n    })), {\n      destinations: destinationsStr\n    });\n    const routerPrompt = new PromptTemplate({\n      template: routerTemplate,\n      inputVariables: [\"input\"],\n      outputParser\n    });\n    const routerChain = LLMRouterChain.fromLLM(llm, routerPrompt);\n    const prompts = retrieverPrompts ?? retrievers.map(() => null);\n    const destinationChains = zipEntries(retrieverNames, retrievers, prompts).reduce((acc, [name, retriever, prompt]) => {\n      const opt = retrievalQAChainOpts ?? {};\n      if (prompt) {\n        opt.prompt = prompt;\n      }\n      acc[name] = RetrievalQAChain.fromLLM(llm, retriever, opt);\n      return acc;\n    }, {});\n    let _defaultChain;\n    if (defaultChain) {\n      _defaultChain = defaultChain;\n    } else if (defaultRetriever) {\n      _defaultChain = RetrievalQAChain.fromLLM(llm, defaultRetriever, {\n        ...retrievalQAChainOpts,\n        prompt: defaultPrompt\n      });\n    } else {\n      const promptTemplate = DEFAULT_TEMPLATE.replace(\"input\", \"query\");\n      const prompt = new PromptTemplate({\n        template: promptTemplate,\n        inputVariables: [\"history\", \"query\"]\n      });\n      _defaultChain = new ConversationChain({\n        llm,\n        prompt,\n        outputKey: \"result\"\n      });\n    }\n    return new MultiRetrievalQAChain({\n      ...multiRetrievalChainOpts,\n      routerChain,\n      destinationChains,\n      defaultChain: _defaultChain\n    });\n  }\n  _chainType() {\n    return \"multi_retrieval_qa_chain\";\n  }\n}", "import { BaseChain } from \"./base.js\";\n/**\n * Class that represents a transform chain. It extends the `BaseChain`\n * class and implements the `TransformChainFields` interface. It provides\n * a way to transform input values to output values using a specified\n * transform function.\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/expression_language/ | expression language}.\n * Will be removed in 0.2.0\n */\nexport class TransformChain extends BaseChain {\n  static lc_name() {\n    return \"TransformChain\";\n  }\n  _chainType() {\n    return \"transform\";\n  }\n  get inputKeys() {\n    return this.inputVariables;\n  }\n  get outputKeys() {\n    return this.outputVariables;\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"transformFunc\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inputVariables\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"outputVariables\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.transformFunc = fields.transform;\n    this.inputVariables = fields.inputVariables;\n    this.outputVariables = fields.outputVariables;\n  }\n  async _call(values, runManager) {\n    return this.transformFunc(values, runManager?.getChild(\"transform\"));\n  }\n}", "import { compare } from \"@langchain/core/utils/json_patch\";\nimport { BaseCumulativeTransformOutputParser, BaseLLMOutputParser, OutputParserException } from \"@langchain/core/output_parsers\";\nimport { parsePartialJson } from \"@langchain/core/output_parsers\";\n/**\n * Class for parsing the output of an LLM. Can be configured to return\n * only the arguments of the function call in the output.\n */\nexport class OutputFunctionsParser extends BaseLLMOutputParser {\n  static lc_name() {\n    return \"OutputFunctionsParser\";\n  }\n  constructor(config) {\n    super();\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain\", \"output_parsers\", \"openai_functions\"]\n    });\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"argsOnly\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    this.argsOnly = config?.argsOnly ?? this.argsOnly;\n  }\n  /**\n   * Parses the output and returns a string representation of the function\n   * call or its arguments.\n   * @param generations The output of the LLM to parse.\n   * @returns A string representation of the function call or its arguments.\n   */\n  async parseResult(generations) {\n    if (\"message\" in generations[0]) {\n      const gen = generations[0];\n      const functionCall = gen.message.additional_kwargs.function_call;\n      if (!functionCall) {\n        throw new Error(`No function_call in message ${JSON.stringify(generations)}`);\n      }\n      if (!functionCall.arguments) {\n        throw new Error(`No arguments in function_call ${JSON.stringify(generations)}`);\n      }\n      if (this.argsOnly) {\n        return functionCall.arguments;\n      }\n      return JSON.stringify(functionCall);\n    } else {\n      throw new Error(`No message in generations ${JSON.stringify(generations)}`);\n    }\n  }\n}\n/**\n * Class for parsing the output of an LLM into a JSON object. Uses an\n * instance of `OutputFunctionsParser` to parse the output.\n */\nexport class JsonOutputFunctionsParser extends BaseCumulativeTransformOutputParser {\n  static lc_name() {\n    return \"JsonOutputFunctionsParser\";\n  }\n  constructor(config) {\n    super(config);\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain\", \"output_parsers\", \"openai_functions\"]\n    });\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"outputParser\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"argsOnly\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    this.argsOnly = config?.argsOnly ?? this.argsOnly;\n    this.outputParser = new OutputFunctionsParser(config);\n  }\n  _diff(prev, next) {\n    if (!next) {\n      return undefined;\n    }\n    const ops = compare(prev ?? {}, next);\n    return ops;\n  }\n  async parsePartialResult(generations) {\n    const generation = generations[0];\n    if (!generation.message) {\n      return undefined;\n    }\n    const {\n      message\n    } = generation;\n    const functionCall = message.additional_kwargs.function_call;\n    if (!functionCall) {\n      return undefined;\n    }\n    if (this.argsOnly) {\n      return parsePartialJson(functionCall.arguments);\n    }\n    return {\n      ...functionCall,\n      arguments: parsePartialJson(functionCall.arguments)\n    };\n  }\n  /**\n   * Parses the output and returns a JSON object. If `argsOnly` is true,\n   * only the arguments of the function call are returned.\n   * @param generations The output of the LLM to parse.\n   * @returns A JSON object representation of the function call or its arguments.\n   */\n  async parseResult(generations) {\n    const result = await this.outputParser.parseResult(generations);\n    if (!result) {\n      throw new Error(`No result from \"OutputFunctionsParser\" ${JSON.stringify(generations)}`);\n    }\n    return this.parse(result);\n  }\n  async parse(text) {\n    try {\n      const parsedResult = JSON.parse(text);\n      if (this.argsOnly) {\n        return parsedResult;\n      }\n      parsedResult.arguments = JSON.parse(parsedResult.arguments);\n      return parsedResult;\n    } catch (e) {\n      throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`);\n    }\n  }\n  getFormatInstructions() {\n    return \"\";\n  }\n}\n/**\n * Class for parsing the output of an LLM into a JSON object and returning\n * a specific attribute. Uses an instance of `JsonOutputFunctionsParser`\n * to parse the output.\n */\nexport class JsonKeyOutputFunctionsParser extends BaseLLMOutputParser {\n  static lc_name() {\n    return \"JsonKeyOutputFunctionsParser\";\n  }\n  get lc_aliases() {\n    return {\n      attrName: \"key_name\"\n    };\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain\", \"output_parsers\", \"openai_functions\"]\n    });\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"outputParser\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new JsonOutputFunctionsParser()\n    });\n    Object.defineProperty(this, \"attrName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.attrName = fields.attrName;\n  }\n  /**\n   * Parses the output and returns a specific attribute of the parsed JSON\n   * object.\n   * @param generations The output of the LLM to parse.\n   * @returns The value of a specific attribute of the parsed JSON object.\n   */\n  async parseResult(generations) {\n    const result = await this.outputParser.parseResult(generations);\n    return result[this.attrName];\n  }\n}", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { PromptTemplate } from \"@langchain/core/prompts\";\nimport { JsonKeyOutputFunctionsParser } from \"../../output_parsers/openai_functions.js\";\nimport { LLMChain } from \"../llm_chain.js\";\n/**\n * Function that returns an array of extraction functions. These functions\n * are used to extract relevant information from a passage.\n * @param schema The schema of the function parameters.\n * @returns An array of extraction functions.\n */\nfunction getExtractionFunctions(schema) {\n  return [{\n    name: \"information_extraction\",\n    description: \"Extracts the relevant information from the passage.\",\n    parameters: {\n      type: \"object\",\n      properties: {\n        info: {\n          type: \"array\",\n          items: {\n            type: schema.type,\n            properties: schema.properties,\n            required: schema.required\n          }\n        }\n      },\n      required: [\"info\"]\n    }\n  }];\n}\nconst _EXTRACTION_TEMPLATE = `Extract and save the relevant entities mentioned in the following passage together with their properties.\n\nPassage:\n{input}\n`;\n/**\n * Function that creates an extraction chain using the provided JSON schema.\n * It sets up the necessary components, such as the prompt, output parser, and tags.\n * @param schema JSON schema of the function parameters.\n * @param llm Must be a ChatOpenAI or AnthropicFunctions model that supports function calling.\n * @returns A LLMChain instance configured to return data matching the schema.\n */\nexport function createExtractionChain(schema, llm) {\n  const functions = getExtractionFunctions(schema);\n  const prompt = PromptTemplate.fromTemplate(_EXTRACTION_TEMPLATE);\n  const outputParser = new JsonKeyOutputFunctionsParser({\n    attrName: \"info\"\n  });\n  return new LLMChain({\n    llm,\n    prompt,\n    llmKwargs: {\n      functions\n    },\n    outputParser,\n    tags: [\"openai_functions\", \"extraction\"]\n  });\n}\n/**\n * Function that creates an extraction chain from a Zod schema. It\n * converts the Zod schema to a JSON schema using zod-to-json-schema\n * before creating the extraction chain.\n * @param schema The Zod schema which extracted data should match\n * @param llm Must be a ChatOpenAI or AnthropicFunctions model that supports function calling.\n * @returns A LLMChain instance configured to return data matching the schema.\n */\nexport function createExtractionChainFromZod(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nschema, llm) {\n  return createExtractionChain(zodToJsonSchema(schema), llm);\n}", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { PromptTemplate } from \"@langchain/core/prompts\";\nimport { JsonOutputFunctionsParser } from \"../../output_parsers/openai_functions.js\";\nimport { LLMChain } from \"../llm_chain.js\";\n/**\n * Function that returns an array of tagging functions. These functions\n * are used to extract relevant information from a passage.\n * @param schema The schema defining the structure of function parameters.\n * @returns An array of tagging functions.\n */\nfunction getTaggingFunctions(schema) {\n  return [{\n    name: \"information_extraction\",\n    description: \"Extracts the relevant information from the passage.\",\n    parameters: schema\n  }];\n}\nconst TAGGING_TEMPLATE = `Extract the desired information from the following passage.\n\nPassage:\n{input}\n`;\n/**\n * Function that creates a tagging chain using the provided schema,\n * LLM, and options. It constructs the LLM with the necessary\n * functions, prompt, output parser, and tags.\n * @param schema The schema defining the structure of function parameters.\n * @param llm LLM to use in the chain. Must support function calling.\n * @param options Options for creating the tagging chain.\n * @returns A new instance of LLMChain configured for tagging.\n *\n * @deprecated\n * Switch to expression language: https://js.langchain.com/docs/expression_language/\n * Will be removed in 0.2.0\n */\nexport function createTaggingChain(schema, llm, options = {}) {\n  const {\n    prompt = PromptTemplate.fromTemplate(TAGGING_TEMPLATE),\n    ...rest\n  } = options;\n  const functions = getTaggingFunctions(schema);\n  const outputParser = new JsonOutputFunctionsParser();\n  return new LLMChain({\n    llm,\n    prompt,\n    llmKwargs: {\n      functions\n    },\n    outputParser,\n    tags: [\"openai_functions\", \"tagging\"],\n    ...rest\n  });\n}\n/**\n * Function that creates a tagging chain from a Zod schema. It converts\n * the Zod schema to a JSON schema using the zodToJsonSchema function and\n * then calls createTaggingChain with the converted schema.\n * @param schema The Zod schema which extracted data should match.\n * @param llm LLM to use in the chain. Must support function calling.\n * @param options Options for creating the tagging chain.\n * @returns A new instance of LLMChain configured for tagging.\n *\n * @deprecated\n * Switch to expression language: https://js.langchain.com/docs/expression_language/\n * Will be removed in 0.2.0\n */\nexport function createTaggingChainFromZod(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nschema, llm, options) {\n  return createTaggingChain(zodToJsonSchema(schema), llm, options);\n}", "/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return typeof subject === 'undefined' || subject === null;\n}\nfunction isObject(subject) {\n  return typeof subject === 'object' && subject !== null;\n}\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;else if (isNothing(sequence)) return [];\n  return [sequence];\n}\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n  if (source) {\n    sourceKeys = Object.keys(source);\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction repeat(string, count) {\n  var result = '',\n    cycle;\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n  return result;\n}\nfunction isNegativeZero(number) {\n  return number === 0 && Number.NEGATIVE_INFINITY === 1 / number;\n}\nvar isNothing_1 = isNothing;\nvar isObject_1 = isObject;\nvar toArray_1 = toArray;\nvar repeat_1 = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1 = extend;\nvar common = {\n  isNothing: isNothing_1,\n  isObject: isObject_1,\n  toArray: toArray_1,\n  repeat: repeat_1,\n  isNegativeZero: isNegativeZero_1,\n  extend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\nfunction formatError(exception, compact) {\n  var where = '',\n    message = exception.reason || '(unknown reason)';\n  if (!exception.mark) return message;\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n  return message + ' ' + where;\n}\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = new Error().stack || '';\n  }\n}\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n  if (!mark.buffer) return null;\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent !== 'number') options.indent = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter !== 'number') options.linesAfter = 2;\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [0];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n  while (match = re.exec(mark.buffer)) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n  var result = '',\n    i,\n    line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(mark.buffer, lineStarts[foundLineNo - i], lineEnds[foundLineNo - i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]), maxLineLength);\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n' + result;\n  }\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(mark.buffer, lineStarts[foundLineNo + i], lineEnds[foundLineNo + i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]), maxLineLength);\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n  }\n  return result.replace(/\\n$/, '');\n}\nvar snippet = makeSnippet;\nvar TYPE_CONSTRUCTOR_OPTIONS = ['kind', 'multi', 'resolve', 'construct', 'instanceOf', 'predicate', 'represent', 'representName', 'defaultStyle', 'styleAliases'];\nvar YAML_NODE_KINDS = ['scalar', 'sequence', 'mapping'];\nfunction compileStyleAliases(map) {\n  var result = {};\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n  return result;\n}\nfunction Type$1(tag, options) {\n  options = options || {};\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options = options; // keep original options in case user wants to extend this type later\n  this.tag = tag;\n  this.kind = options['kind'] || null;\n  this.resolve = options['resolve'] || function () {\n    return true;\n  };\n  this.construct = options['construct'] || function (data) {\n    return data;\n  };\n  this.instanceOf = options['instanceOf'] || null;\n  this.predicate = options['predicate'] || null;\n  this.represent = options['represent'] || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.multi = options['multi'] || false;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\nfunction compileList(schema, name) {\n  var result = [];\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind && previousType.multi === currentType.multi) {\n        newIndex = previousIndex;\n      }\n    });\n    result[newIndex] = currentType;\n  });\n  return result;\n}\nfunction compileMap(/* lists... */\n) {\n  var result = {\n      scalar: {},\n      sequence: {},\n      mapping: {},\n      fallback: {},\n      multi: {\n        scalar: [],\n        sequence: [],\n        mapping: [],\n        fallback: []\n      }\n    },\n    index,\n    length;\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' + 'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n  var result = Object.create(Schema$1.prototype);\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap = compileMap(result.compiledImplicit, result.compiledExplicit);\n  return result;\n};\nvar schema = Schema$1;\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) {\n    return data !== null ? data : '';\n  }\n});\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) {\n    return data !== null ? data : [];\n  }\n});\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) {\n    return data !== null ? data : {};\n  }\n});\nvar failsafe = new schema({\n  explicit: [str, seq, map]\n});\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n  var max = data.length;\n  return max === 1 && data === '~' || max === 4 && (data === 'null' || data === 'Null' || data === 'NULL');\n}\nfunction constructYamlNull() {\n  return null;\n}\nfunction isNull(object) {\n  return object === null;\n}\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () {\n      return '~';\n    },\n    lowercase: function () {\n      return 'null';\n    },\n    uppercase: function () {\n      return 'NULL';\n    },\n    camelcase: function () {\n      return 'Null';\n    },\n    empty: function () {\n      return '';\n    }\n  },\n  defaultStyle: 'lowercase'\n});\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n  var max = data.length;\n  return max === 4 && (data === 'true' || data === 'True' || data === 'TRUE') || max === 5 && (data === 'false' || data === 'False' || data === 'FALSE');\n}\nfunction constructYamlBoolean(data) {\n  return data === 'true' || data === 'True' || data === 'TRUE';\n}\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) {\n      return object ? 'true' : 'false';\n    },\n    uppercase: function (object) {\n      return object ? 'TRUE' : 'FALSE';\n    },\n    camelcase: function (object) {\n      return object ? 'True' : 'False';\n    }\n  },\n  defaultStyle: 'lowercase'\n});\nfunction isHexCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x39 /* 9 */ || 0x41 /* A */ <= c && c <= 0x46 /* F */ || 0x61 /* a */ <= c && c <= 0x66 /* f */;\n}\nfunction isOctCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x37 /* 7 */;\n}\nfunction isDecCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x39 /* 9 */;\n}\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n  var max = data.length,\n    index = 0,\n    hasDigits = false,\n    ch;\n  if (!max) return false;\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n    if (ch === 'x') {\n      // base 16\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n    if (ch === 'o') {\n      // base 8\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n  return true;\n}\nfunction constructYamlInteger(data) {\n  var value = data,\n    sign = 1,\n    ch;\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n  ch = value[0];\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n  if (value === '0') return 0;\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n  return sign * parseInt(value, 10);\n}\nfunction isInteger(object) {\n  return Object.prototype.toString.call(object) === '[object Number]' && object % 1 === 0 && !common.isNegativeZero(object);\n}\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary: function (obj) {\n      return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1);\n    },\n    octal: function (obj) {\n      return obj >= 0 ? '0o' + obj.toString(8) : '-0o' + obj.toString(8).slice(1);\n    },\n    decimal: function (obj) {\n      return obj.toString(10);\n    },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) {\n      return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() : '-0x' + obj.toString(16).toUpperCase().slice(1);\n    }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary: [2, 'bin'],\n    octal: [8, 'oct'],\n    decimal: [10, 'dec'],\n    hexadecimal: [16, 'hex']\n  }\n});\nvar YAML_FLOAT_PATTERN = new RegExp(\n// 2.5e4, 2.5 and integers\n'^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n// .2e4, .2\n// special case, seems not from spec\n'|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n// .inf\n'|[-+]?\\\\.(?:inf|Inf|INF)' +\n// .nan\n'|\\\\.(?:nan|NaN|NAN))$');\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n  // Quick hack to not allow integers end with `_`\n  // Probably should update regexp & check speed\n  data[data.length - 1] === '_') {\n    return false;\n  }\n  return true;\n}\nfunction constructYamlFloat(data) {\n  var value, sign;\n  value = data.replace(/_/g, '').toLowerCase();\n  sign = value[0] === '-' ? -1 : 1;\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n  if (value === '.inf') {\n    return sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\nfunction representYamlFloat(object, style) {\n  var res;\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase':\n        return '.nan';\n      case 'uppercase':\n        return '.NAN';\n      case 'camelcase':\n        return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase':\n        return '.inf';\n      case 'uppercase':\n        return '.INF';\n      case 'camelcase':\n        return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase':\n        return '-.inf';\n      case 'uppercase':\n        return '-.INF';\n      case 'camelcase':\n        return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\nfunction isFloat(object) {\n  return Object.prototype.toString.call(object) === '[object Number]' && (object % 1 !== 0 || common.isNegativeZero(object));\n}\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\nvar json = failsafe.extend({\n  implicit: [_null, bool, int, float]\n});\nvar core = json;\nvar YAML_DATE_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' +\n// [1] year\n'-([0-9][0-9])' +\n// [2] month\n'-([0-9][0-9])$'); // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' +\n// [1] year\n'-([0-9][0-9]?)' +\n// [2] month\n'-([0-9][0-9]?)' +\n// [3] day\n'(?:[Tt]|[ \\\\t]+)' +\n// ...\n'([0-9][0-9]?)' +\n// [4] hour\n':([0-9][0-9])' +\n// [5] minute\n':([0-9][0-9])' +\n// [6] second\n'(?:\\\\.([0-9]*))?' +\n// [7] fraction\n'(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' +\n// [8] tz [9] tz_sign [10] tz_hour\n'(?::([0-9][0-9]))?))?$'); // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\nfunction constructYamlTimestamp(data) {\n  var match,\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    fraction = 0,\n    delta = null,\n    tz_hour,\n    tz_minute,\n    date;\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +match[1];\n  month = +match[2] - 1; // JS month starts with 0\n  day = +match[3];\n  if (!match[4]) {\n    // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +match[4];\n  minute = +match[5];\n  second = +match[6];\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) {\n      // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +match[10];\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n  if (delta) date.setTime(date.getTime() - delta);\n  return date;\n}\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n  var code,\n    idx,\n    bitlen = 0,\n    max = data.length,\n    map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return bitlen % 8 === 0;\n}\nfunction constructYamlBinary(data) {\n  var idx,\n    tailbits,\n    input = data.replace(/[\\r\\n=]/g, ''),\n    // remove CR/LF & padding to simplify scan\n    max = input.length,\n    map = BASE64_MAP,\n    bits = 0,\n    result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if (idx % 4 === 0 && idx) {\n      result.push(bits >> 16 & 0xFF);\n      result.push(bits >> 8 & 0xFF);\n      result.push(bits & 0xFF);\n    }\n    bits = bits << 6 | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = max % 4 * 6;\n  if (tailbits === 0) {\n    result.push(bits >> 16 & 0xFF);\n    result.push(bits >> 8 & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push(bits >> 10 & 0xFF);\n    result.push(bits >> 2 & 0xFF);\n  } else if (tailbits === 12) {\n    result.push(bits >> 4 & 0xFF);\n  }\n  return new Uint8Array(result);\n}\nfunction representYamlBinary(object /*, style*/) {\n  var result = '',\n    bits = 0,\n    idx,\n    tail,\n    max = object.length,\n    map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if (idx % 3 === 0 && idx) {\n      result += map[bits >> 18 & 0x3F];\n      result += map[bits >> 12 & 0x3F];\n      result += map[bits >> 6 & 0x3F];\n      result += map[bits & 0x3F];\n    }\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n  if (tail === 0) {\n    result += map[bits >> 18 & 0x3F];\n    result += map[bits >> 12 & 0x3F];\n    result += map[bits >> 6 & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[bits >> 10 & 0x3F];\n    result += map[bits >> 4 & 0x3F];\n    result += map[bits << 2 & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[bits >> 2 & 0x3F];\n    result += map[bits << 4 & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n  return result;\n}\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) === '[object Uint8Array]';\n}\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2 = Object.prototype.toString;\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n  var objectKeys = [],\n    index,\n    length,\n    pair,\n    pairKey,\n    pairHasKey,\n    object = data;\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;else return false;\n      }\n    }\n    if (!pairHasKey) return false;\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);else return false;\n  }\n  return true;\n}\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\nvar _toString$1 = Object.prototype.toString;\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n  var index,\n    length,\n    pair,\n    keys,\n    result,\n    object = data;\n  result = new Array(object.length);\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n    keys = Object.keys(pair);\n    if (keys.length !== 1) return false;\n    result[index] = [keys[0], pair[keys[0]]];\n  }\n  return true;\n}\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n  var index,\n    length,\n    pair,\n    keys,\n    result,\n    object = data;\n  result = new Array(object.length);\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    keys = Object.keys(pair);\n    result[index] = [keys[0], pair[keys[0]]];\n  }\n  return result;\n}\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n  var key,\n    object = data;\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n  return true;\n}\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\nvar _default = core.extend({\n  implicit: [timestamp, merge],\n  explicit: [binary, omap, pairs, set]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\nvar CONTEXT_FLOW_IN = 1;\nvar CONTEXT_FLOW_OUT = 2;\nvar CONTEXT_BLOCK_IN = 3;\nvar CONTEXT_BLOCK_OUT = 4;\nvar CHOMPING_CLIP = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP = 3;\nvar PATTERN_NON_PRINTABLE = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction is_EOL(c) {\n  return c === 0x0A /* LF */ || c === 0x0D /* CR */;\n}\nfunction is_WHITE_SPACE(c) {\n  return c === 0x09 /* Tab */ || c === 0x20 /* Space */;\n}\nfunction is_WS_OR_EOL(c) {\n  return c === 0x09 /* Tab */ || c === 0x20 /* Space */ || c === 0x0A /* LF */ || c === 0x0D /* CR */;\n}\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C /* , */ || c === 0x5B /* [ */ || c === 0x5D /* ] */ || c === 0x7B /* { */ || c === 0x7D /* } */;\n}\nfunction fromHexCode(c) {\n  var lc;\n  if (0x30 /* 0 */ <= c && c <= 0x39 /* 9 */) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n  if (0x61 /* a */ <= lc && lc <= 0x66 /* f */) {\n    return lc - 0x61 + 10;\n  }\n  return -1;\n}\nfunction escapedHexLen(c) {\n  if (c === 0x78 /* x */) {\n    return 2;\n  }\n  if (c === 0x75 /* u */) {\n    return 4;\n  }\n  if (c === 0x55 /* U */) {\n    return 8;\n  }\n  return 0;\n}\nfunction fromDecimalCode(c) {\n  if (0x30 /* 0 */ <= c && c <= 0x39 /* 9 */) {\n    return c - 0x30;\n  }\n  return -1;\n}\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return c === 0x30 /* 0 */ ? '\\x00' : c === 0x61 /* a */ ? '\\x07' : c === 0x62 /* b */ ? '\\x08' : c === 0x74 /* t */ ? '\\x09' : c === 0x09 /* Tab */ ? '\\x09' : c === 0x6E /* n */ ? '\\x0A' : c === 0x76 /* v */ ? '\\x0B' : c === 0x66 /* f */ ? '\\x0C' : c === 0x72 /* r */ ? '\\x0D' : c === 0x65 /* e */ ? '\\x1B' : c === 0x20 /* Space */ ? ' ' : c === 0x22 /* \" */ ? '\\x22' : c === 0x2F /* / */ ? '/' : c === 0x5C /* \\ */ ? '\\x5C' : c === 0x4E /* N */ ? '\\x85' : c === 0x5F /* _ */ ? '\\xA0' : c === 0x4C /* L */ ? '\\u2028' : c === 0x50 /* P */ ? '\\u2029' : '';\n}\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode((c - 0x010000 >> 10) + 0xD800, (c - 0x010000 & 0x03FF) + 0xDC00);\n}\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\nfunction State$1(input, options) {\n  this.input = input;\n  this.filename = options['filename'] || null;\n  this.schema = options['schema'] || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy = options['legacy'] || false;\n  this.json = options['json'] || false;\n  this.listener = options['listener'] || null;\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap = this.schema.compiledTypeMap;\n  this.length = input.length;\n  this.position = 0;\n  this.line = 0;\n  this.lineStart = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n}\nfunction generateError(state, message) {\n  var mark = {\n    name: state.filename,\n    buffer: state.input.slice(0, -1),\n    // omit trailing \\0\n    position: state.position,\n    line: state.line,\n    column: state.position - state.lineStart\n  };\n  mark.snippet = snippet(mark);\n  return new exception(message, mark);\n}\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\nvar directiveHandlers = {\n  YAML: function handleYamlDirective(state, name, args) {\n    var match, major, minor;\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n    state.version = args[0];\n    state.checkLineBreaks = minor < 2;\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n  TAG: function handleTagDirective(state, name, args) {\n    var handle, prefix;\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n    handle = args[0];\n    prefix = args[1];\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n    state.tagMap[handle] = prefix;\n  }\n};\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n  if (start < end) {\n    _result = state.input.slice(start, end);\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 || 0x20 <= _character && _character <= 0x10FFFF)) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n    state.result += _result;\n  }\n}\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n  sourceKeys = Object.keys(source);\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startLineStart, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n  keyNode = String(keyNode);\n  if (_result === null) {\n    _result = {};\n  }\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json && !_hasOwnProperty$1.call(overridableKeys, keyNode) && _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n  return _result;\n}\nfunction readLineBreak(state) {\n  var ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x0A /* LF */) {\n    state.position++;\n  } else if (ch === 0x0D /* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A /* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n    ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09 /* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n    if (allowComments && ch === 0x23 /* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A /* LF */ && ch !== 0x0D /* CR */ && ch !== 0);\n    }\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n      while (ch === 0x20 /* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n  return lineBreaks;\n}\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n    ch;\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D /* - */ || ch === 0x2E /* . */) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2)) {\n    _position += 3;\n    ch = state.input.charCodeAt(_position);\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n    following,\n    captureStart,\n    captureEnd,\n    hasPendingContent,\n    _line,\n    _lineStart,\n    _lineIndent,\n    _kind = state.kind,\n    _result = state.result,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 0x23 /* # */ || ch === 0x26 /* & */ || ch === 0x2A /* * */ || ch === 0x21 /* ! */ || ch === 0x7C /* | */ || ch === 0x3E /* > */ || ch === 0x27 /* ' */ || ch === 0x22 /* \" */ || ch === 0x25 /* % */ || ch === 0x40 /* @ */ || ch === 0x60 /* ` */) {\n    return false;\n  }\n  if (ch === 0x3F /* ? */ || ch === 0x2D /* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n    if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n  while (ch !== 0) {\n    if (ch === 0x3A /* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n      if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n    } else if (ch === 0x23 /* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n    } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n    ch = state.input.charCodeAt(++state.position);\n  }\n  captureSegment(state, captureStart, captureEnd, false);\n  if (state.result) {\n    return true;\n  }\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch, captureStart, captureEnd;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x27 /* ' */) {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27 /* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n      if (ch === 0x27 /* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart, captureEnd, hexLength, hexResult, tmp, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x22 /* \" */) {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22 /* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n    } else if (ch === 0x5C /* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n        state.result += charFromCodepoint(hexResult);\n        state.position++;\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n      captureStart = captureEnd = state.position;\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n    _line,\n    _lineStart,\n    _pos,\n    _tag = state.tag,\n    _result,\n    _anchor = state.anchor,\n    following,\n    terminator,\n    isPair,\n    isExplicitPair,\n    isMapping,\n    overridableKeys = Object.create(null),\n    keyNode,\n    keyTag,\n    valueNode,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x5B /* [ */) {\n    terminator = 0x5D; /* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B /* { */) {\n    terminator = 0x7D; /* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(++state.position);\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C /* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n    if (ch === 0x3F /* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A /* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if (ch === 0x2C /* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n    folding,\n    chomping = CHOMPING_CLIP,\n    didReadContent = false,\n    detectedIndent = false,\n    textIndent = nodeIndent,\n    emptyLines = 0,\n    atMoreIndented = false,\n    tmp,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x7C /* | */) {\n    folding = false;\n  } else if (ch === 0x3E /* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n    if (ch === 0x2B /* + */ || ch === 0x2D /* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = ch === 0x2B /* + */ ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n    } else {\n      break;\n    }\n  }\n  if (is_WHITE_SPACE(ch)) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (is_WHITE_SPACE(ch));\n    if (ch === 0x23 /* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (!is_EOL(ch) && ch !== 0);\n    }\n  }\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n    ch = state.input.charCodeAt(state.position);\n    while ((!detectedIndent || state.lineIndent < textIndent) && ch === 0x20 /* Space */) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) {\n          // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n        // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n        // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) {\n          // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n        // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n      // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n    while (!is_EOL(ch) && ch !== 0) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    captureSegment(state, captureStart, state.position, false);\n  }\n  return true;\n}\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n    _tag = state.tag,\n    _anchor = state.anchor,\n    _result = [],\n    following,\n    detected = false,\n    ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n    if (ch !== 0x2D /* - */) {\n      break;\n    }\n    following = state.input.charCodeAt(state.position + 1);\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n    detected = true;\n    state.position++;\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n    allowCompact,\n    _line,\n    _keyLine,\n    _keyLineStart,\n    _keyPos,\n    _tag = state.tag,\n    _anchor = state.anchor,\n    _result = {},\n    overridableKeys = Object.create(null),\n    keyTag = null,\n    keyNode = null,\n    valueNode = null,\n    atExplicitKey = false,\n    detected = false,\n    ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F /* ? */ || ch === 0x3A /* : */) && is_WS_OR_EOL(following)) {\n      if (ch === 0x3F /* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n      state.position += 1;\n      ch = following;\n\n      //\n      // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n      //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n        if (ch === 0x3A /* : */) {\n          ch = state.input.charCodeAt(++state.position);\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n  return detected;\n}\nfunction readTagProperty(state) {\n  var _position,\n    isVerbatim = false,\n    isNamed = false,\n    tagHandle,\n    tagName,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x21 /* ! */) return false;\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n  ch = state.input.charCodeAt(++state.position);\n  if (ch === 0x3C /* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n  } else if (ch === 0x21 /* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n  } else {\n    tagHandle = '!';\n  }\n  _position = state.position;\n  if (isVerbatim) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (ch !== 0 && ch !== 0x3E /* > */);\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      if (ch === 0x21 /* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n    tagName = state.input.slice(_position, state.position);\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n  if (isVerbatim) {\n    state.tag = tagName;\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n  return true;\n}\nfunction readAnchorProperty(state) {\n  var _position, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x26 /* & */) return false;\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\nfunction readAlias(state) {\n  var _position, alias, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x2A /* * */) return false;\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n  alias = state.input.slice(_position, state.position);\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n    allowBlockScalars,\n    allowBlockCollections,\n    indentStatus = 1,\n    // 1: this>parent, 0: this=parent, -1: this<parent\n    atNewLine = false,\n    hasContent = false,\n    typeIndex,\n    typeQuantity,\n    typeList,\n    type,\n    flowIndent,\n    blockIndent;\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n  state.tag = null;\n  state.anchor = null;\n  state.kind = null;\n  state.result = null;\n  allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n    blockIndent = state.position - state.lineStart;\n    if (indentStatus === 1) {\n      if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n        } else if (readAlias(state)) {\n          hasContent = true;\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n      if (type.resolve(state.result)) {\n        // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n    if (!type.resolve(state.result, state.tag)) {\n      // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null || state.anchor !== null || hasContent;\n}\nfunction readDocument(state) {\n  var documentStart = state.position,\n    _position,\n    directiveName,\n    directiveArgs,\n    hasDirectives = false,\n    ch;\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n    if (state.lineIndent > 0 || ch !== 0x25 /* % */) {\n      break;\n    }\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n      if (ch === 0x23 /* # */) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n      if (is_EOL(ch)) break;\n      _position = state.position;\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n    if (ch !== 0) readLineBreak(state);\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n  skipSeparationSpace(state, true, -1);\n  if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 0x2D /* - */ && state.input.charCodeAt(state.position + 1) === 0x2D /* - */ && state.input.charCodeAt(state.position + 2) === 0x2D /* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n  if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n  state.documents.push(state.result);\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n    if (state.input.charCodeAt(state.position) === 0x2E /* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n  if (state.position < state.length - 1) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n  if (input.length !== 0) {\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A /* LF */ && input.charCodeAt(input.length - 1) !== 0x0D /* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n  var state = new State$1(input, options);\n  var nullpos = input.indexOf('\\0');\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n  while (state.input.charCodeAt(state.position) === 0x20 /* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n  while (state.position < state.length - 1) {\n    readDocument(state);\n  }\n  return state.documents;\n}\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n  var documents = loadDocuments(input, options);\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\nvar loadAll_1 = loadAll$1;\nvar load_1 = load$1;\nvar loader = {\n  loadAll: loadAll_1,\n  load: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\nvar _toString = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar CHAR_BOM = 0xFEFF;\nvar CHAR_TAB = 0x09; /* Tab */\nvar CHAR_LINE_FEED = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN = 0x0D; /* CR */\nvar CHAR_SPACE = 0x20; /* Space */\nvar CHAR_EXCLAMATION = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE = 0x22; /* \" */\nvar CHAR_SHARP = 0x23; /* # */\nvar CHAR_PERCENT = 0x25; /* % */\nvar CHAR_AMPERSAND = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE = 0x27; /* ' */\nvar CHAR_ASTERISK = 0x2A; /* * */\nvar CHAR_COMMA = 0x2C; /* , */\nvar CHAR_MINUS = 0x2D; /* - */\nvar CHAR_COLON = 0x3A; /* : */\nvar CHAR_EQUALS = 0x3D; /* = */\nvar CHAR_GREATER_THAN = 0x3E; /* > */\nvar CHAR_QUESTION = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\nESCAPE_SEQUENCES[0x00] = '\\\\0';\nESCAPE_SEQUENCES[0x07] = '\\\\a';\nESCAPE_SEQUENCES[0x08] = '\\\\b';\nESCAPE_SEQUENCES[0x09] = '\\\\t';\nESCAPE_SEQUENCES[0x0A] = '\\\\n';\nESCAPE_SEQUENCES[0x0B] = '\\\\v';\nESCAPE_SEQUENCES[0x0C] = '\\\\f';\nESCAPE_SEQUENCES[0x0D] = '\\\\r';\nESCAPE_SEQUENCES[0x1B] = '\\\\e';\nESCAPE_SEQUENCES[0x22] = '\\\\\"';\nESCAPE_SEQUENCES[0x5C] = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85] = '\\\\N';\nESCAPE_SEQUENCES[0xA0] = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\nvar DEPRECATED_BOOLEANS_SYNTAX = ['y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON', 'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'];\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n  if (map === null) return {};\n  result = {};\n  keys = Object.keys(map);\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n    result[tag] = style;\n  }\n  return result;\n}\nfunction encodeHex(character) {\n  var string, handle, length;\n  string = character.toString(16).toUpperCase();\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\nvar QUOTING_TYPE_SINGLE = 1,\n  QUOTING_TYPE_DOUBLE = 2;\nfunction State(options) {\n  this.schema = options['schema'] || _default;\n  this.indent = Math.max(1, options['indent'] || 2);\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid = options['skipInvalid'] || false;\n  this.flowLevel = common.isNothing(options['flowLevel']) ? -1 : options['flowLevel'];\n  this.styleMap = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys = options['sortKeys'] || false;\n  this.lineWidth = options['lineWidth'] || 80;\n  this.noRefs = options['noRefs'] || false;\n  this.noCompatMode = options['noCompatMode'] || false;\n  this.condenseFlow = options['condenseFlow'] || false;\n  this.quotingType = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes = options['forceQuotes'] || false;\n  this.replacer = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n  this.tag = null;\n  this.result = '';\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n    position = 0,\n    next = -1,\n    result = '',\n    line,\n    length = string.length;\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n    if (line.length && line !== '\\n') result += ind;\n    result += line;\n  }\n  return result;\n}\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return 0x00020 <= c && c <= 0x00007E || 0x000A1 <= c && c <= 0x00D7FF && c !== 0x2028 && c !== 0x2029 || 0x0E000 <= c && c <= 0x00FFFD && c !== CHAR_BOM || 0x10000 <= c && c <= 0x10FFFF;\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c) && c !== CHAR_BOM\n  // - b-char\n  && c !== CHAR_CARRIAGE_RETURN && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n  // ns-plain-safe\n  inblock ?\n  // c = flow-in\n  cIsNsCharOrWhitespace : cIsNsCharOrWhitespace\n  // - c-flow-indicator\n  && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET\n\n  // ns-plain-char\n  ) && c !== CHAR_SHARP // false on '#'\n  && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n  || isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP // change to true on '[^ ]#'\n  || prev === CHAR_COLON && cIsNsChar; // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM && !isWhitespace(c) // - s-white\n  // - (c-indicator ::=\n  // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n  && c !== CHAR_MINUS && c !== CHAR_QUESTION && c !== CHAR_COLON && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET\n  // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n  && c !== CHAR_SHARP && c !== CHAR_AMPERSAND && c !== CHAR_ASTERISK && c !== CHAR_EXCLAMATION && c !== CHAR_VERTICAL_LINE && c !== CHAR_EQUALS && c !== CHAR_GREATER_THAN && c !== CHAR_SINGLE_QUOTE && c !== CHAR_DOUBLE_QUOTE\n  // | “%” | “@” | “`”)\n  && c !== CHAR_PERCENT && c !== CHAR_COMMERCIAL_AT && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos),\n    second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\nvar STYLE_PLAIN = 1,\n  STYLE_SINGLE = 2,\n  STYLE_LITERAL = 3,\n  STYLE_FOLDED = 4,\n  STYLE_DOUBLE = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType, quotingType, forceQuotes, inblock) {\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0)) && isPlainSafeLast(codePointAt(string, string.length - 1));\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n          // Foldable line = too long, and not more-indented.\n          i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || shouldTrackWidth && i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"' + string + '\"' : \"'\" + string + \"'\";\n      }\n    }\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1 ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n    // No block styles in flow mode.\n    || state.flowLevel > -1 && level >= state.flowLevel;\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent) + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent) + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }();\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip = string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : clip ? '' : '-';\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }();\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while (match = lineRe.exec(string)) {\n    var prefix = match[1],\n      line = match[2];\n    moreIndented = line[0] === ' ';\n    result += prefix + (!prevMoreIndented && !moreIndented && line !== '' ? '\\n' : '') + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0,\n    end,\n    curr = 0,\n    next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while (match = breakRe.exec(line)) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = curr > start ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1; // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n  return result;\n}\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n    _tag = state.tag,\n    index,\n    length,\n    value;\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) || typeof value === 'undefined' && writeNode(state, level, null, false, false)) {\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n    _tag = state.tag,\n    index,\n    length,\n    value;\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) || typeof value === 'undefined' && writeNode(state, level + 1, null, true, true, false, true)) {\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n      _result += state.dump;\n    }\n  }\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\nfunction writeFlowMapping(state, level, object) {\n  var _result = '',\n    _tag = state.tag,\n    objectKeyList = Object.keys(object),\n    index,\n    length,\n    objectKey,\n    objectValue,\n    pairBuffer;\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n    if (state.condenseFlow) pairBuffer += '\"';\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n    if (state.dump.length > 1024) pairBuffer += '? ';\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result = '',\n    _tag = state.tag,\n    objectKeyList = Object.keys(object),\n    index,\n    length,\n    objectKey,\n    objectValue,\n    explicitPair,\n    pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n    explicitPair = state.tag !== null && state.tag !== '?' || state.dump && state.dump.length > 1024;\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n    pairBuffer += state.dump;\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n    if ((type.instanceOf || type.predicate) && (!type.instanceOf || typeof object === 'object' && object instanceof type.instanceOf) && (!type.predicate || type.predicate(object))) {\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n        state.dump = _result;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n  if (block) {\n    block = state.flowLevel < 0 || state.flowLevel > level;\n  }\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n    duplicateIndex,\n    duplicate;\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n  if (state.tag !== null && state.tag !== '?' || duplicate || state.indent !== 2 && level > 0) {\n    compact = false;\n  }\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && Object.keys(state.dump).length !== 0) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && state.dump.length !== 0) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(state.tag[0] === '!' ? state.tag.slice(1) : state.tag).replace(/!/g, '%21');\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n  return true;\n}\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n    duplicatesIndexes = [],\n    index,\n    length;\n  inspectNode(object, objects, duplicatesIndexes);\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList, index, length;\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\nfunction dump$1(input, options) {\n  options = options || {};\n  var state = new State(options);\n  if (!state.noRefs) getDuplicateReferences(input, state);\n  var value = input;\n  if (state.replacer) {\n    value = state.replacer.call({\n      '': value\n    }, '', value);\n  }\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n  return '';\n}\nvar dump_1 = dump$1;\nvar dumper = {\n  dump: dump_1\n};\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' + 'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\nvar Type = type;\nvar Schema = schema;\nvar FAILSAFE_SCHEMA = failsafe;\nvar JSON_SCHEMA = json;\nvar CORE_SCHEMA = core;\nvar DEFAULT_SCHEMA = _default;\nvar load = loader.load;\nvar loadAll = loader.loadAll;\nvar dump = dumper.dump;\nvar YAMLException = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary: binary,\n  float: float,\n  map: map,\n  null: _null,\n  pairs: pairs,\n  set: set,\n  timestamp: timestamp,\n  bool: bool,\n  int: int,\n  merge: merge,\n  omap: omap,\n  seq: seq,\n  str: str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad = renamed('safeLoad', 'load');\nvar safeLoadAll = renamed('safeLoadAll', 'loadAll');\nvar safeDump = renamed('safeDump', 'dump');\nvar jsYaml = {\n  Type: Type,\n  Schema: Schema,\n  FAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n  JSON_SCHEMA: JSON_SCHEMA,\n  CORE_SCHEMA: CORE_SCHEMA,\n  DEFAULT_SCHEMA: DEFAULT_SCHEMA,\n  load: load,\n  loadAll: loadAll,\n  dump: dump,\n  YAMLException: YAMLException,\n  types: types,\n  safeLoad: safeLoad,\n  safeLoadAll: safeLoadAll,\n  safeDump: safeDump\n};\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };", "import * as yaml from \"js-yaml\";\nexport class OpenAPISpec {\n  constructor(document) {\n    Object.defineProperty(this, \"document\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document\n    });\n  }\n  get baseUrl() {\n    return this.document.servers ? this.document.servers[0].url : undefined;\n  }\n  getPathsStrict() {\n    if (!this.document.paths) {\n      throw new Error(\"No paths found in spec\");\n    }\n    return this.document.paths;\n  }\n  getParametersStrict() {\n    if (!this.document.components?.parameters) {\n      throw new Error(\"No parameters found in spec\");\n    }\n    return this.document.components.parameters;\n  }\n  getSchemasStrict() {\n    if (!this.document.components?.schemas) {\n      throw new Error(\"No schemas found in spec.\");\n    }\n    return this.document.components.schemas;\n  }\n  getRequestBodiesStrict() {\n    if (!this.document.components?.requestBodies) {\n      throw new Error(\"No request body found in spec.\");\n    }\n    return this.document.components.requestBodies;\n  }\n  getPathStrict(path) {\n    const pathItem = this.getPathsStrict()[path];\n    if (pathItem === undefined) {\n      throw new Error(`No path found for \"${path}\".`);\n    }\n    return pathItem;\n  }\n  getReferencedParameter(ref) {\n    const refComponents = ref.$ref.split(\"/\");\n    const refName = refComponents[refComponents.length - 1];\n    if (this.getParametersStrict()[refName] === undefined) {\n      throw new Error(`No parameter found for \"${refName}\".`);\n    }\n    return this.getParametersStrict()[refName];\n  }\n  getRootReferencedParameter(ref) {\n    let parameter = this.getReferencedParameter(ref);\n    while (parameter.$ref !== undefined) {\n      parameter = this.getReferencedParameter(parameter);\n    }\n    return parameter;\n  }\n  getReferencedSchema(ref) {\n    const refComponents = ref.$ref.split(\"/\");\n    const refName = refComponents[refComponents.length - 1];\n    const schema = this.getSchemasStrict()[refName];\n    if (schema === undefined) {\n      throw new Error(`No schema found for \"${refName}\".`);\n    }\n    return schema;\n  }\n  getSchema(schema) {\n    if (schema.$ref !== undefined) {\n      return this.getReferencedSchema(schema);\n    }\n    return schema;\n  }\n  getRootReferencedSchema(ref) {\n    let schema = this.getReferencedSchema(ref);\n    while (schema.$ref !== undefined) {\n      schema = this.getReferencedSchema(schema);\n    }\n    return schema;\n  }\n  getReferencedRequestBody(ref) {\n    const refComponents = ref.$ref.split(\"/\");\n    const refName = refComponents[refComponents.length - 1];\n    const requestBodies = this.getRequestBodiesStrict();\n    if (requestBodies[refName] === undefined) {\n      throw new Error(`No request body found for \"${refName}\"`);\n    }\n    return requestBodies[refName];\n  }\n  getRootReferencedRequestBody(ref) {\n    let requestBody = this.getReferencedRequestBody(ref);\n    while (requestBody.$ref !== undefined) {\n      requestBody = this.getReferencedRequestBody(requestBody);\n    }\n    return requestBody;\n  }\n  getMethodsForPath(path) {\n    const pathItem = this.getPathStrict(path);\n    // This is an enum in the underlying package.\n    // Werestate here to allow \"import type\" above and not cause warnings in certain envs.\n    const possibleMethods = [\"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\", \"trace\"];\n    return possibleMethods.filter(possibleMethod => pathItem[possibleMethod] !== undefined);\n  }\n  getParametersForPath(path) {\n    const pathItem = this.getPathStrict(path);\n    if (pathItem.parameters === undefined) {\n      return [];\n    }\n    return pathItem.parameters.map(parameter => {\n      if (parameter.$ref !== undefined) {\n        return this.getRootReferencedParameter(parameter);\n      }\n      return parameter;\n    });\n  }\n  getOperation(path, method) {\n    const pathItem = this.getPathStrict(path);\n    if (pathItem[method] === undefined) {\n      throw new Error(`No ${method} method found for \"path\".`);\n    }\n    return pathItem[method];\n  }\n  getParametersForOperation(operation) {\n    if (operation.parameters === undefined) {\n      return [];\n    }\n    return operation.parameters.map(parameter => {\n      if (parameter.$ref !== undefined) {\n        return this.getRootReferencedParameter(parameter);\n      }\n      return parameter;\n    });\n  }\n  getRequestBodyForOperation(operation) {\n    const {\n      requestBody\n    } = operation;\n    if (requestBody?.$ref !== undefined) {\n      return this.getRootReferencedRequestBody(requestBody);\n    }\n    return requestBody;\n  }\n  static getCleanedOperationId(operation, path, method) {\n    let {\n      operationId\n    } = operation;\n    if (operationId === undefined) {\n      const updatedPath = path.replaceAll(/[^a-zA-Z0-9]/, \"_\");\n      operationId = `${updatedPath.startsWith(\"/\") ? updatedPath.slice(1) : updatedPath}_${method}`;\n    }\n    return operationId.replaceAll(\"-\", \"_\").replaceAll(\".\", \"_\").replaceAll(\"/\", \"_\");\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static alertUnsupportedSpec(document) {\n    const warningMessage = \"This may result in degraded performance. Convert your OpenAPI spec to 3.1.0 for better support.\";\n    const swaggerVersion = document.swagger;\n    const openAPIVersion = document.openapi;\n    if (openAPIVersion !== undefined && openAPIVersion !== \"3.1.0\") {\n      console.warn(`Attempting to load an OpenAPI ${openAPIVersion} spec. ${warningMessage}`);\n    } else if (swaggerVersion !== undefined) {\n      console.warn(`Attempting to load a Swagger ${swaggerVersion} spec. ${warningMessage}`);\n    } else {\n      throw new Error(`Attempting to load an unsupported spec:\\n\\n${JSON.stringify(document, null, 2)}.`);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromObject(document) {\n    OpenAPISpec.alertUnsupportedSpec(document);\n    return new OpenAPISpec(document);\n  }\n  static fromString(rawString) {\n    let document;\n    try {\n      document = JSON.parse(rawString);\n    } catch (e) {\n      document = yaml.load(rawString);\n    }\n    return OpenAPISpec.fromObject(document);\n  }\n  static async fromURL(url) {\n    const response = await fetch(url);\n    const rawDocument = await response.text();\n    return OpenAPISpec.fromString(rawDocument);\n  }\n}", "import { ChatOpenAI } from \"@langchain/openai\";\nimport { ChatPromptTemplate, HumanMessagePromptTemplate } from \"@langchain/core/prompts\";\nimport { OpenAPISpec } from \"../../util/openapi.js\";\nimport { BaseChain } from \"../base.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nimport { SequentialChain } from \"../sequential_chain.js\";\nimport { JsonOutputFunctionsParser } from \"../../output_parsers/openai_functions.js\";\n/**\n * Formats a URL by replacing path parameters with their corresponding\n * values.\n * @param url The URL to format.\n * @param pathParams The path parameters to replace in the URL.\n * @returns The formatted URL.\n */\nfunction formatURL(url, pathParams) {\n  const expectedPathParamNames = [...url.matchAll(/{(.*?)}/g)].map(match => match[1]);\n  const newParams = {};\n  for (const paramName of expectedPathParamNames) {\n    const cleanParamName = paramName.replace(/^\\.;/, \"\").replace(/\\*$/, \"\");\n    const value = pathParams[cleanParamName];\n    let formattedValue;\n    if (Array.isArray(value)) {\n      if (paramName.startsWith(\".\")) {\n        const separator = paramName.endsWith(\"*\") ? \".\" : \",\";\n        formattedValue = `.${value.join(separator)}`;\n      } else if (paramName.startsWith(\",\")) {\n        const separator = paramName.endsWith(\"*\") ? `${cleanParamName}=` : \",\";\n        formattedValue = `${cleanParamName}=${value.join(separator)}`;\n      } else {\n        formattedValue = value.join(\",\");\n      }\n    } else if (typeof value === \"object\") {\n      const kvSeparator = paramName.endsWith(\"*\") ? \"=\" : \",\";\n      const kvStrings = Object.entries(value).map(([k, v]) => k + kvSeparator + v);\n      let entrySeparator;\n      if (paramName.startsWith(\".\")) {\n        entrySeparator = \".\";\n        formattedValue = \".\";\n      } else if (paramName.startsWith(\";\")) {\n        entrySeparator = \";\";\n        formattedValue = \";\";\n      } else {\n        entrySeparator = \",\";\n        formattedValue = \"\";\n      }\n      formattedValue += kvStrings.join(entrySeparator);\n    } else {\n      if (paramName.startsWith(\".\")) {\n        formattedValue = `.${value}`;\n      } else if (paramName.startsWith(\";\")) {\n        formattedValue = `;${cleanParamName}=${value}`;\n      } else {\n        formattedValue = value;\n      }\n    }\n    newParams[paramName] = formattedValue;\n  }\n  let formattedUrl = url;\n  for (const [key, newValue] of Object.entries(newParams)) {\n    formattedUrl = formattedUrl.replace(`{${key}}`, newValue);\n  }\n  return formattedUrl;\n}\n/**\n * Converts OpenAPI parameters to JSON schema format.\n * @param params The OpenAPI parameters to convert.\n * @param spec The OpenAPI specification that contains the parameters.\n * @returns The JSON schema representation of the OpenAPI parameters.\n */\nfunction convertOpenAPIParamsToJSONSchema(params, spec) {\n  return params.reduce((jsonSchema, param) => {\n    let schema;\n    if (param.schema) {\n      schema = spec.getSchema(param.schema);\n      // eslint-disable-next-line no-param-reassign\n      jsonSchema.properties[param.name] = convertOpenAPISchemaToJSONSchema(schema, spec);\n    } else if (param.content) {\n      const mediaTypeSchema = Object.values(param.content)[0].schema;\n      if (mediaTypeSchema) {\n        schema = spec.getSchema(mediaTypeSchema);\n      }\n      if (!schema) {\n        return jsonSchema;\n      }\n      if (schema.description === undefined) {\n        schema.description = param.description ?? \"\";\n      }\n      // eslint-disable-next-line no-param-reassign\n      jsonSchema.properties[param.name] = convertOpenAPISchemaToJSONSchema(schema, spec);\n    } else {\n      return jsonSchema;\n    }\n    if (param.required && Array.isArray(jsonSchema.required)) {\n      jsonSchema.required.push(param.name);\n    }\n    return jsonSchema;\n  }, {\n    type: \"object\",\n    properties: {},\n    required: [],\n    additionalProperties: {}\n  });\n}\n// OpenAI throws errors on extraneous schema properties, e.g. if \"required\" is set on individual ones\n/**\n * Converts OpenAPI schemas to JSON schema format.\n * @param schema The OpenAPI schema to convert.\n * @param spec The OpenAPI specification that contains the schema.\n * @returns The JSON schema representation of the OpenAPI schema.\n */\nexport function convertOpenAPISchemaToJSONSchema(schema, spec) {\n  if (schema.type === \"object\") {\n    return Object.keys(schema.properties ?? {}).reduce((jsonSchema, propertyName) => {\n      if (!schema.properties) {\n        return jsonSchema;\n      }\n      const openAPIProperty = spec.getSchema(schema.properties[propertyName]);\n      if (openAPIProperty.type === undefined) {\n        return jsonSchema;\n      }\n      // eslint-disable-next-line no-param-reassign\n      jsonSchema.properties[propertyName] = convertOpenAPISchemaToJSONSchema(openAPIProperty, spec);\n      if ((openAPIProperty.required || schema.required?.includes(propertyName)) && jsonSchema.required !== undefined) {\n        jsonSchema.required.push(propertyName);\n      }\n      return jsonSchema;\n    }, {\n      type: \"object\",\n      properties: {},\n      required: [],\n      additionalProperties: {}\n    });\n  }\n  if (schema.type === \"array\") {\n    return {\n      type: \"array\",\n      items: convertOpenAPISchemaToJSONSchema(schema.items ?? {}, spec),\n      minItems: schema.minItems,\n      maxItems: schema.maxItems\n    };\n  }\n  return {\n    type: schema.type ?? \"string\"\n  };\n}\n/**\n * Converts an OpenAPI specification to OpenAI functions.\n * @param spec The OpenAPI specification to convert.\n * @returns An object containing the OpenAI functions derived from the OpenAPI specification and a default execution method.\n */\nfunction convertOpenAPISpecToOpenAIFunctions(spec) {\n  if (!spec.document.paths) {\n    return {\n      openAIFunctions: []\n    };\n  }\n  const openAIFunctions = [];\n  const nameToCallMap = {};\n  for (const path of Object.keys(spec.document.paths)) {\n    const pathParameters = spec.getParametersForPath(path);\n    for (const method of spec.getMethodsForPath(path)) {\n      const operation = spec.getOperation(path, method);\n      if (!operation) {\n        return {\n          openAIFunctions: []\n        };\n      }\n      const operationParametersByLocation = pathParameters.concat(spec.getParametersForOperation(operation)).reduce((operationParams, param) => {\n        if (!operationParams[param.in]) {\n          // eslint-disable-next-line no-param-reassign\n          operationParams[param.in] = [];\n        }\n        operationParams[param.in].push(param);\n        return operationParams;\n      }, {});\n      const paramLocationToRequestArgNameMap = {\n        query: \"params\",\n        header: \"headers\",\n        cookie: \"cookies\",\n        path: \"path_params\"\n      };\n      const requestArgsSchema = {};\n      for (const paramLocation of Object.keys(paramLocationToRequestArgNameMap)) {\n        if (operationParametersByLocation[paramLocation]) {\n          requestArgsSchema[paramLocationToRequestArgNameMap[paramLocation]] = convertOpenAPIParamsToJSONSchema(operationParametersByLocation[paramLocation], spec);\n        }\n      }\n      const requestBody = spec.getRequestBodyForOperation(operation);\n      if (requestBody?.content !== undefined) {\n        const requestBodySchemas = {};\n        for (const [mediaType, mediaTypeObject] of Object.entries(requestBody.content)) {\n          if (mediaTypeObject.schema !== undefined) {\n            const schema = spec.getSchema(mediaTypeObject.schema);\n            requestBodySchemas[mediaType] = convertOpenAPISchemaToJSONSchema(schema, spec);\n          }\n        }\n        const mediaTypes = Object.keys(requestBodySchemas);\n        if (mediaTypes.length === 1) {\n          requestArgsSchema.data = requestBodySchemas[mediaTypes[0]];\n        } else if (mediaTypes.length > 1) {\n          requestArgsSchema.data = {\n            anyOf: Object.values(requestBodySchemas)\n          };\n        }\n      }\n      const openAIFunction = {\n        name: OpenAPISpec.getCleanedOperationId(operation, path, method),\n        description: operation.description ?? operation.summary ?? \"\",\n        parameters: {\n          type: \"object\",\n          properties: requestArgsSchema,\n          // All remaining top-level parameters are required\n          required: Object.keys(requestArgsSchema)\n        }\n      };\n      openAIFunctions.push(openAIFunction);\n      const baseUrl = (spec.baseUrl ?? \"\").endsWith(\"/\") ? (spec.baseUrl ?? \"\").slice(0, -1) : spec.baseUrl ?? \"\";\n      nameToCallMap[openAIFunction.name] = {\n        method,\n        url: baseUrl + path\n      };\n    }\n  }\n  return {\n    openAIFunctions,\n    defaultExecutionMethod: async (name,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    requestArgs, options) => {\n      const {\n        headers: customHeaders,\n        params: customParams,\n        ...rest\n      } = options ?? {};\n      const {\n        method,\n        url\n      } = nameToCallMap[name];\n      const requestParams = requestArgs.params ?? {};\n      const nonEmptyParams = Object.keys(requestParams).reduce(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (filteredArgs, argName) => {\n        if (requestParams[argName] !== \"\" && requestParams[argName] !== null && requestParams[argName] !== undefined) {\n          // eslint-disable-next-line no-param-reassign\n          filteredArgs[argName] = requestParams[argName];\n        }\n        return filteredArgs;\n      }, {});\n      const queryString = new URLSearchParams({\n        ...nonEmptyParams,\n        ...customParams\n      }).toString();\n      const pathParams = requestArgs.path_params;\n      const formattedUrl = formatURL(url, pathParams) + (queryString.length ? `?${queryString}` : \"\");\n      const headers = {};\n      let body;\n      if (requestArgs.data !== undefined) {\n        let contentType = \"text/plain\";\n        if (typeof requestArgs.data !== \"string\") {\n          if (typeof requestArgs.data === \"object\") {\n            contentType = \"application/json\";\n          }\n          body = JSON.stringify(requestArgs.data);\n        } else {\n          body = requestArgs.data;\n        }\n        headers[\"content-type\"] = contentType;\n      }\n      const response = await fetch(formattedUrl, {\n        ...requestArgs,\n        method,\n        headers: {\n          ...headers,\n          ...requestArgs.headers,\n          ...customHeaders\n        },\n        body,\n        ...rest\n      });\n      let output;\n      if (response.status < 200 || response.status > 299) {\n        output = `${response.status}: ${response.statusText} for ${name} called with ${JSON.stringify(queryString)}`;\n      } else {\n        output = await response.text();\n      }\n      return output;\n    }\n  };\n}\n/**\n * A chain for making simple API requests.\n */\nclass SimpleRequestChain extends BaseChain {\n  static lc_name() {\n    return \"SimpleRequestChain\";\n  }\n  constructor(config) {\n    super();\n    Object.defineProperty(this, \"requestMethod\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"function\"\n    });\n    Object.defineProperty(this, \"outputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"response\"\n    });\n    this.requestMethod = config.requestMethod;\n  }\n  get inputKeys() {\n    return [this.inputKey];\n  }\n  get outputKeys() {\n    return [this.outputKey];\n  }\n  _chainType() {\n    return \"simple_request_chain\";\n  }\n  /** @ignore */\n  async _call(values, _runManager) {\n    const inputKeyValue = values[this.inputKey];\n    const methodName = inputKeyValue.name;\n    const args = inputKeyValue.arguments;\n    const response = await this.requestMethod(methodName, args);\n    return {\n      [this.outputKey]: response\n    };\n  }\n}\n/**\n * Create a chain for querying an API from a OpenAPI spec.\n * @param spec OpenAPISpec or url/file/text string corresponding to one.\n * @param options Custom options passed into the chain\n * @returns OpenAPIChain\n */\nexport async function createOpenAPIChain(spec, options = {}) {\n  let convertedSpec;\n  if (typeof spec === \"string\") {\n    try {\n      convertedSpec = await OpenAPISpec.fromURL(spec);\n    } catch (e) {\n      try {\n        convertedSpec = OpenAPISpec.fromString(spec);\n      } catch (e) {\n        throw new Error(`Unable to parse spec from source ${spec}.`);\n      }\n    }\n  } else {\n    convertedSpec = OpenAPISpec.fromObject(spec);\n  }\n  const {\n    openAIFunctions,\n    defaultExecutionMethod\n  } = convertOpenAPISpecToOpenAIFunctions(convertedSpec);\n  if (defaultExecutionMethod === undefined) {\n    throw new Error(`Could not parse any valid operations from the provided spec.`);\n  }\n  const {\n    llm = new ChatOpenAI({\n      modelName: \"gpt-3.5-turbo-0613\"\n    }),\n    prompt = ChatPromptTemplate.fromMessages([HumanMessagePromptTemplate.fromTemplate(\"Use the provided API's to respond to this user query:\\n\\n{query}\")]),\n    requestChain = new SimpleRequestChain({\n      requestMethod: async (name, args) => defaultExecutionMethod(name, args, {\n        headers: options.headers,\n        params: options.params\n      })\n    }),\n    llmChainInputs = {},\n    verbose,\n    ...rest\n  } = options;\n  const formatChain = new LLMChain({\n    llm,\n    prompt,\n    outputParser: new JsonOutputFunctionsParser({\n      argsOnly: false\n    }),\n    outputKey: \"function\",\n    llmKwargs: {\n      functions: openAIFunctions\n    },\n    ...llmChainInputs\n  });\n  return new SequentialChain({\n    chains: [formatChain, requestChain],\n    outputVariables: [\"response\"],\n    inputVariables: formatChain.inputKeys,\n    verbose,\n    ...rest\n  });\n}"],
  "mappings": "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",
  "names": ["result", "doc", "question_generator_template", "result", "schema", "json", "type", "description", "schema", "template", "schema", "schema", "exception", "map", "schema", "type", "extend", "str", "string", "schema", "schema", "e"]
}
