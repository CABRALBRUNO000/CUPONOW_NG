
import { Injectable } from '@angular/core';
import { ChatOpenAI } from '@langchain/openai';
import { HumanMessage, SystemMessage } from '@langchain/core/messages';
import { environment } from '../../environments/environment';
import { Message } from '../models/message.model';

@Injectable({
  providedIn: 'root'
})
export class ChatChainService {
  private chatModel: ChatOpenAI;
  private systemMessage: SystemMessage;
  private messageHistory: { message: string; response: string }[] = [];

  constructor() {
    this.chatModel = new ChatOpenAI({
      openAIApiKey: environment.openAiKey,
      temperature: 0.7,
      modelName: 'gpt-3.5-turbo-1106'
    });

    this.systemMessage = new SystemMessage(
      `Você é um assistente especializado em encontrar e recomendar cupons de desconto. 
      Responda a perguntas gerais de forma amigável.`
    );
  }

  async processMessage(message: string, messageHistory: Message[]): Promise<string> {
    try {
      if (message.toLowerCase() === 'ola') {
        const response = 'Olá! Como posso ajudar você hoje? Se tiver alguma dúvida sobre cupons de desconto, estou aqui para ajudar!';
        this.messageHistory.push({ message, response });
        return response;
      }

      const response = await this.chatModel.invoke([
        this.systemMessage,
        new HumanMessage(message)
      ]);

      const responseContent = response.content as string;
      this.messageHistory.push({ message, response: responseContent });

      return responseContent;
    } catch (error) {
      console.error('Erro ao processar mensagem:', error);
      return 'Desculpe, não consegui processar sua solicitação.';
    }
  }

  getMessageHistory(): { message: string; response: string }[] {
    return this.messageHistory;
  }
}